{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rui Seca\\\\savannah-bites\\\\frontend\\\\src\\\\context\\\\CartContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// src/context/CartContext.js\n\nimport React, { createContext, useContext, useState, useCallback, useEffect } from \"react\";\nimport { MEAL_DEALS, isWithinTimeRestrictions } from \"../utils/mealDeals\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CartContext = /*#__PURE__*/createContext();\nconst CART_STORAGE_KEY = \"savannah_bites_cart\";\nconst DEALS_STORAGE_KEY = \"savannah_bites_deals\";\nconst CART_TIMEOUT = 15 * 60 * 1000; // 15 minutes in milliseconds\n\nexport function CartProvider({\n  children\n}) {\n  _s();\n  // Cart State\n  const [cart, setCart] = useState(() => {\n    try {\n      const savedCart = localStorage.getItem(CART_STORAGE_KEY);\n      return savedCart ? JSON.parse(savedCart) : [];\n    } catch (error) {\n      console.error(\"Error loading cart from storage:\", error);\n      return [];\n    }\n  });\n\n  // Active Deal State\n  const [activeDeal, setActiveDeal] = useState(() => {\n    try {\n      const savedDeal = localStorage.getItem(DEALS_STORAGE_KEY);\n      if (!savedDeal) return null;\n      const deal = JSON.parse(savedDeal);\n      // Verify if the deal is still valid (time restrictions)\n      if (deal && deal.timeRestrictions && !isWithinTimeRestrictions(deal.timeRestrictions)) {\n        localStorage.removeItem(DEALS_STORAGE_KEY);\n        return null;\n      }\n      return deal;\n    } catch (error) {\n      console.error(\"Error loading deal from storage:\", error);\n      return null;\n    }\n  });\n\n  // Last Updated Timestamp\n  const [lastUpdated, setLastUpdated] = useState(() => {\n    const savedTimestamp = localStorage.getItem(\"cart_last_updated\");\n    return savedTimestamp ? parseInt(savedTimestamp, 10) : Date.now();\n  });\n\n  // Save cart and deals to localStorage\n  useEffect(() => {\n    try {\n      localStorage.setItem(CART_STORAGE_KEY, JSON.stringify(cart));\n      if (activeDeal) {\n        localStorage.setItem(DEALS_STORAGE_KEY, JSON.stringify(activeDeal));\n      } else {\n        localStorage.removeItem(DEALS_STORAGE_KEY);\n      }\n      setLastUpdated(Date.now());\n    } catch (error) {\n      console.error(\"Error saving cart/deals to storage:\", error);\n    }\n  }, [cart, activeDeal]);\n\n  // Cart timeout effect\n  useEffect(() => {\n    const checkTimeout = () => {\n      const now = Date.now();\n      if (cart.length > 0 && now - lastUpdated > CART_TIMEOUT) {\n        console.log(\"Cart timeout - clearing cart\");\n        clearCart();\n      }\n    };\n    const timeoutInterval = setInterval(checkTimeout, 60000); // Check every minute\n    return () => clearInterval(timeoutInterval);\n  }, [lastUpdated, cart.length]);\n\n  // Helper Functions\n  const getItemKey = useCallback((id, size) => `${id}-${size || \"default\"}`, []);\n  const getItemPrice = useCallback(item => {\n    if (!item) return 0;\n    if (typeof item.price === \"object\") {\n      return item.selectedPrice || item.price[item.size] || Object.values(item.price)[0];\n    }\n    return item.price;\n  }, []);\n\n  // Deal Management Functions\n  const checkDealRequirements = useCallback((deal, cartItems) => {\n    if (!deal || !cartItems) return false;\n    const itemsByCategory = cartItems.reduce((acc, item) => {\n      if (!acc[item.category]) {\n        acc[item.category] = [];\n      }\n      acc[item.category].push(item);\n      return acc;\n    }, {});\n    return Object.entries(deal.requirements).every(([category, requirement]) => {\n      const categoryItems = itemsByCategory[category] || [];\n      const validItems = categoryItems.filter(item => requirement.size === \"any\" || item.size === requirement.size);\n      const totalCount = validItems.reduce((sum, item) => sum + item.quantity, 0);\n      return totalCount >= requirement.count;\n    });\n  }, []);\n  const startDeal = useCallback(deal => {\n    if (!deal) return;\n\n    // Verify time restrictions\n    if (deal.timeRestrictions && !isWithinTimeRestrictions(deal.timeRestrictions)) {\n      console.log(\"Deal is not available at this time\");\n      return;\n    }\n    setActiveDeal({\n      ...deal,\n      startedAt: new Date().toISOString()\n    });\n  }, []);\n  const cancelDeal = useCallback(() => {\n    setActiveDeal(null);\n    localStorage.removeItem(DEALS_STORAGE_KEY);\n  }, []);\n\n  // Cart Management Functions\n  const addToCart = useCallback(item => {\n    if (!item) return;\n    setCart(currentCart => {\n      const itemKey = getItemKey(item.id, item.size);\n      const existingItemIndex = currentCart.findIndex(cartItem => getItemKey(cartItem.id, cartItem.size) === itemKey);\n      let updatedCart;\n      if (existingItemIndex !== -1) {\n        updatedCart = currentCart.map((cartItem, index) => index === existingItemIndex ? {\n          ...cartItem,\n          quantity: cartItem.quantity + 1\n        } : cartItem);\n      } else {\n        updatedCart = [...currentCart, {\n          ...item,\n          quantity: 1,\n          cartItemId: itemKey,\n          addedAt: new Date().toISOString()\n        }];\n      }\n      return updatedCart;\n    });\n  }, [getItemKey]);\n  const removeFromCart = useCallback((itemId, size = null) => {\n    setCart(currentCart => {\n      const itemKey = getItemKey(itemId, size);\n      const updatedCart = currentCart.filter(item => getItemKey(item.id, item.size) !== itemKey);\n\n      // Check if removing this item affects the active deal\n      if (activeDeal && !checkDealRequirements(activeDeal, updatedCart)) {\n        cancelDeal();\n      }\n      return updatedCart;\n    });\n  }, [getItemKey, activeDeal, checkDealRequirements, cancelDeal]);\n  const updateQuantity = useCallback((itemId, newQuantity, size = null) => {\n    if (newQuantity < 1) {\n      removeFromCart(itemId, size);\n      return;\n    }\n    setCart(currentCart => {\n      const itemKey = getItemKey(itemId, size);\n      const updatedCart = currentCart.map(item => getItemKey(item.id, item.size) === itemKey ? {\n        ...item,\n        quantity: newQuantity\n      } : item);\n\n      // Verify deal requirements after quantity update\n      if (activeDeal && !checkDealRequirements(activeDeal, updatedCart)) {\n        cancelDeal();\n      }\n      return updatedCart;\n    });\n  }, [getItemKey, removeFromCart, activeDeal, checkDealRequirements, cancelDeal]);\n  const clearCart = useCallback(() => {\n    setCart([]);\n    cancelDeal();\n    localStorage.removeItem(CART_STORAGE_KEY);\n    localStorage.removeItem(\"cart_last_updated\");\n    setLastUpdated(Date.now());\n  }, [cancelDeal]);\n\n  // Cart Calculations\n  const cartTotal = useCallback(() => {\n    if (activeDeal && checkDealRequirements(activeDeal, cart)) {\n      return activeDeal.price;\n    }\n    return cart.reduce((total, item) => {\n      const price = getItemPrice(item);\n      return total + price * item.quantity;\n    }, 0);\n  }, [cart, activeDeal, checkDealRequirements, getItemPrice]);\n  const cartItemsCount = useCallback(() => {\n    return cart.reduce((total, item) => total + item.quantity, 0);\n  }, [cart]);\n  const isItemInCart = useCallback((itemId, size = null) => {\n    const itemKey = getItemKey(itemId, size);\n    return cart.some(item => getItemKey(item.id, item.size) === itemKey);\n  }, [cart, getItemKey]);\n\n  // Provide Context\n  const value = {\n    cart,\n    activeDeal,\n    addToCart,\n    removeFromCart,\n    updateQuantity,\n    clearCart,\n    cartTotal,\n    cartItemsCount,\n    isItemInCart,\n    startDeal,\n    cancelDeal,\n    checkDealRequirements,\n    getItemPrice\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 286,\n    columnNumber: 10\n  }, this);\n}\n\n// Custom Hook\n_s(CartProvider, \"kb2VS56lKOOjghg9ql6UO3fqrRs=\");\n_c = CartProvider;\nexport function useCart() {\n  _s2();\n  const context = useContext(CartContext);\n  if (context === undefined) {\n    throw new Error(\"useCart must be used within a CartProvider\");\n  }\n  return context;\n}\n_s2(useCart, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useCallback","useEffect","MEAL_DEALS","isWithinTimeRestrictions","jsxDEV","_jsxDEV","CartContext","CART_STORAGE_KEY","DEALS_STORAGE_KEY","CART_TIMEOUT","CartProvider","children","_s","cart","setCart","savedCart","localStorage","getItem","JSON","parse","error","console","activeDeal","setActiveDeal","savedDeal","deal","timeRestrictions","removeItem","lastUpdated","setLastUpdated","savedTimestamp","parseInt","Date","now","setItem","stringify","checkTimeout","length","log","clearCart","timeoutInterval","setInterval","clearInterval","getItemKey","id","size","getItemPrice","item","price","selectedPrice","Object","values","checkDealRequirements","cartItems","itemsByCategory","reduce","acc","category","push","entries","requirements","every","requirement","categoryItems","validItems","filter","totalCount","sum","quantity","count","startDeal","startedAt","toISOString","cancelDeal","addToCart","currentCart","itemKey","existingItemIndex","findIndex","cartItem","updatedCart","map","index","cartItemId","addedAt","removeFromCart","itemId","updateQuantity","newQuantity","cartTotal","total","cartItemsCount","isItemInCart","some","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useCart","_s2","context","undefined","Error","$RefreshReg$"],"sources":["C:/Users/Rui Seca/savannah-bites/frontend/src/context/CartContext.js"],"sourcesContent":["// src/context/CartContext.js\r\n\r\nimport React, {\r\n  createContext,\r\n  useContext,\r\n  useState,\r\n  useCallback,\r\n  useEffect,\r\n} from \"react\";\r\nimport { MEAL_DEALS, isWithinTimeRestrictions } from \"../utils/mealDeals\";\r\n\r\nconst CartContext = createContext();\r\n\r\nconst CART_STORAGE_KEY = \"savannah_bites_cart\";\r\nconst DEALS_STORAGE_KEY = \"savannah_bites_deals\";\r\nconst CART_TIMEOUT = 15 * 60 * 1000; // 15 minutes in milliseconds\r\n\r\nexport function CartProvider({ children }) {\r\n  // Cart State\r\n  const [cart, setCart] = useState(() => {\r\n    try {\r\n      const savedCart = localStorage.getItem(CART_STORAGE_KEY);\r\n      return savedCart ? JSON.parse(savedCart) : [];\r\n    } catch (error) {\r\n      console.error(\"Error loading cart from storage:\", error);\r\n      return [];\r\n    }\r\n  });\r\n\r\n  // Active Deal State\r\n  const [activeDeal, setActiveDeal] = useState(() => {\r\n    try {\r\n      const savedDeal = localStorage.getItem(DEALS_STORAGE_KEY);\r\n      if (!savedDeal) return null;\r\n\r\n      const deal = JSON.parse(savedDeal);\r\n      // Verify if the deal is still valid (time restrictions)\r\n      if (\r\n        deal &&\r\n        deal.timeRestrictions &&\r\n        !isWithinTimeRestrictions(deal.timeRestrictions)\r\n      ) {\r\n        localStorage.removeItem(DEALS_STORAGE_KEY);\r\n        return null;\r\n      }\r\n      return deal;\r\n    } catch (error) {\r\n      console.error(\"Error loading deal from storage:\", error);\r\n      return null;\r\n    }\r\n  });\r\n\r\n  // Last Updated Timestamp\r\n  const [lastUpdated, setLastUpdated] = useState(() => {\r\n    const savedTimestamp = localStorage.getItem(\"cart_last_updated\");\r\n    return savedTimestamp ? parseInt(savedTimestamp, 10) : Date.now();\r\n  });\r\n\r\n  // Save cart and deals to localStorage\r\n  useEffect(() => {\r\n    try {\r\n      localStorage.setItem(CART_STORAGE_KEY, JSON.stringify(cart));\r\n      if (activeDeal) {\r\n        localStorage.setItem(DEALS_STORAGE_KEY, JSON.stringify(activeDeal));\r\n      } else {\r\n        localStorage.removeItem(DEALS_STORAGE_KEY);\r\n      }\r\n      setLastUpdated(Date.now());\r\n    } catch (error) {\r\n      console.error(\"Error saving cart/deals to storage:\", error);\r\n    }\r\n  }, [cart, activeDeal]);\r\n\r\n  // Cart timeout effect\r\n  useEffect(() => {\r\n    const checkTimeout = () => {\r\n      const now = Date.now();\r\n      if (cart.length > 0 && now - lastUpdated > CART_TIMEOUT) {\r\n        console.log(\"Cart timeout - clearing cart\");\r\n        clearCart();\r\n      }\r\n    };\r\n\r\n    const timeoutInterval = setInterval(checkTimeout, 60000); // Check every minute\r\n    return () => clearInterval(timeoutInterval);\r\n  }, [lastUpdated, cart.length]);\r\n\r\n  // Helper Functions\r\n  const getItemKey = useCallback(\r\n    (id, size) => `${id}-${size || \"default\"}`,\r\n    []\r\n  );\r\n\r\n  const getItemPrice = useCallback((item) => {\r\n    if (!item) return 0;\r\n    if (typeof item.price === \"object\") {\r\n      return (\r\n        item.selectedPrice ||\r\n        item.price[item.size] ||\r\n        Object.values(item.price)[0]\r\n      );\r\n    }\r\n    return item.price;\r\n  }, []);\r\n\r\n  // Deal Management Functions\r\n  const checkDealRequirements = useCallback((deal, cartItems) => {\r\n    if (!deal || !cartItems) return false;\r\n\r\n    const itemsByCategory = cartItems.reduce((acc, item) => {\r\n      if (!acc[item.category]) {\r\n        acc[item.category] = [];\r\n      }\r\n      acc[item.category].push(item);\r\n      return acc;\r\n    }, {});\r\n\r\n    return Object.entries(deal.requirements).every(\r\n      ([category, requirement]) => {\r\n        const categoryItems = itemsByCategory[category] || [];\r\n        const validItems = categoryItems.filter(\r\n          (item) => requirement.size === \"any\" || item.size === requirement.size\r\n        );\r\n        const totalCount = validItems.reduce(\r\n          (sum, item) => sum + item.quantity,\r\n          0\r\n        );\r\n        return totalCount >= requirement.count;\r\n      }\r\n    );\r\n  }, []);\r\n\r\n  const startDeal = useCallback((deal) => {\r\n    if (!deal) return;\r\n\r\n    // Verify time restrictions\r\n    if (\r\n      deal.timeRestrictions &&\r\n      !isWithinTimeRestrictions(deal.timeRestrictions)\r\n    ) {\r\n      console.log(\"Deal is not available at this time\");\r\n      return;\r\n    }\r\n\r\n    setActiveDeal({\r\n      ...deal,\r\n      startedAt: new Date().toISOString(),\r\n    });\r\n  }, []);\r\n\r\n  const cancelDeal = useCallback(() => {\r\n    setActiveDeal(null);\r\n    localStorage.removeItem(DEALS_STORAGE_KEY);\r\n  }, []);\r\n\r\n  // Cart Management Functions\r\n  const addToCart = useCallback(\r\n    (item) => {\r\n      if (!item) return;\r\n\r\n      setCart((currentCart) => {\r\n        const itemKey = getItemKey(item.id, item.size);\r\n        const existingItemIndex = currentCart.findIndex(\r\n          (cartItem) => getItemKey(cartItem.id, cartItem.size) === itemKey\r\n        );\r\n\r\n        let updatedCart;\r\n        if (existingItemIndex !== -1) {\r\n          updatedCart = currentCart.map((cartItem, index) =>\r\n            index === existingItemIndex\r\n              ? { ...cartItem, quantity: cartItem.quantity + 1 }\r\n              : cartItem\r\n          );\r\n        } else {\r\n          updatedCart = [\r\n            ...currentCart,\r\n            {\r\n              ...item,\r\n              quantity: 1,\r\n              cartItemId: itemKey,\r\n              addedAt: new Date().toISOString(),\r\n            },\r\n          ];\r\n        }\r\n\r\n        return updatedCart;\r\n      });\r\n    },\r\n    [getItemKey]\r\n  );\r\n\r\n  const removeFromCart = useCallback(\r\n    (itemId, size = null) => {\r\n      setCart((currentCart) => {\r\n        const itemKey = getItemKey(itemId, size);\r\n        const updatedCart = currentCart.filter(\r\n          (item) => getItemKey(item.id, item.size) !== itemKey\r\n        );\r\n\r\n        // Check if removing this item affects the active deal\r\n        if (activeDeal && !checkDealRequirements(activeDeal, updatedCart)) {\r\n          cancelDeal();\r\n        }\r\n\r\n        return updatedCart;\r\n      });\r\n    },\r\n    [getItemKey, activeDeal, checkDealRequirements, cancelDeal]\r\n  );\r\n\r\n  const updateQuantity = useCallback(\r\n    (itemId, newQuantity, size = null) => {\r\n      if (newQuantity < 1) {\r\n        removeFromCart(itemId, size);\r\n        return;\r\n      }\r\n\r\n      setCart((currentCart) => {\r\n        const itemKey = getItemKey(itemId, size);\r\n        const updatedCart = currentCart.map((item) =>\r\n          getItemKey(item.id, item.size) === itemKey\r\n            ? { ...item, quantity: newQuantity }\r\n            : item\r\n        );\r\n\r\n        // Verify deal requirements after quantity update\r\n        if (activeDeal && !checkDealRequirements(activeDeal, updatedCart)) {\r\n          cancelDeal();\r\n        }\r\n\r\n        return updatedCart;\r\n      });\r\n    },\r\n    [getItemKey, removeFromCart, activeDeal, checkDealRequirements, cancelDeal]\r\n  );\r\n\r\n  const clearCart = useCallback(() => {\r\n    setCart([]);\r\n    cancelDeal();\r\n    localStorage.removeItem(CART_STORAGE_KEY);\r\n    localStorage.removeItem(\"cart_last_updated\");\r\n    setLastUpdated(Date.now());\r\n  }, [cancelDeal]);\r\n\r\n  // Cart Calculations\r\n  const cartTotal = useCallback(() => {\r\n    if (activeDeal && checkDealRequirements(activeDeal, cart)) {\r\n      return activeDeal.price;\r\n    }\r\n\r\n    return cart.reduce((total, item) => {\r\n      const price = getItemPrice(item);\r\n      return total + price * item.quantity;\r\n    }, 0);\r\n  }, [cart, activeDeal, checkDealRequirements, getItemPrice]);\r\n\r\n  const cartItemsCount = useCallback(() => {\r\n    return cart.reduce((total, item) => total + item.quantity, 0);\r\n  }, [cart]);\r\n\r\n  const isItemInCart = useCallback(\r\n    (itemId, size = null) => {\r\n      const itemKey = getItemKey(itemId, size);\r\n      return cart.some((item) => getItemKey(item.id, item.size) === itemKey);\r\n    },\r\n    [cart, getItemKey]\r\n  );\r\n\r\n  // Provide Context\r\n  const value = {\r\n    cart,\r\n    activeDeal,\r\n    addToCart,\r\n    removeFromCart,\r\n    updateQuantity,\r\n    clearCart,\r\n    cartTotal,\r\n    cartItemsCount,\r\n    isItemInCart,\r\n    startDeal,\r\n    cancelDeal,\r\n    checkDealRequirements,\r\n    getItemPrice,\r\n  };\r\n\r\n  return <CartContext.Provider value={value}>{children}</CartContext.Provider>;\r\n}\r\n\r\n// Custom Hook\r\nexport function useCart() {\r\n  const context = useContext(CartContext);\r\n  if (context === undefined) {\r\n    throw new Error(\"useCart must be used within a CartProvider\");\r\n  }\r\n  return context;\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}