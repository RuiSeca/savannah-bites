{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rui Seca\\\\savannah-bites\\\\frontend\\\\src\\\\components\\\\ScrollToTop\\\\index.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport styles from \"./styles.module.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ScrollToTop = () => {\n  _s();\n  const [isVisible, setIsVisible] = useState(false);\n\n  // Toggle visibility\n  const toggleVisibility = () => {\n    const scrolled = document.documentElement.scrollTop;\n    if (scrolled > 300) {\n      setIsVisible(true);\n    } else if (scrolled <= 300) {\n      setIsVisible(false);\n    }\n  };\n\n  // Add scroll event listener\n  useEffect(() => {\n    console.log(\"ScrollToTop component mounted\"); // Debug log\n    window.addEventListener(\"scroll\", toggleVisibility);\n    return () => {\n      window.removeEventListener(\"scroll\", toggleVisibility);\n    };\n  }, []);\n\n  // Scroll to top handler\n  const handleScrollToTop = () => {\n    window.scrollTo({\n      top: 0,\n      behavior: \"smooth\"\n    });\n  };\n  console.log(\"Visibility state:\", isVisible); // Debug log\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: isVisible && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleScrollToTop,\n      className: styles.scrollTop,\n      \"aria-label\": \"Scroll to top\",\n      type: \"button\",\n      children: \"\\u2191\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n_s(ScrollToTop, \"J3yJOyGdBT4L7hs1p1XQYVGMdrY=\");\n_c = ScrollToTop;\nexport default ScrollToTop;\nvar _c;\n$RefreshReg$(_c, \"ScrollToTop\");","map":{"version":3,"names":["React","useState","useEffect","styles","jsxDEV","_jsxDEV","Fragment","_Fragment","ScrollToTop","_s","isVisible","setIsVisible","toggleVisibility","scrolled","document","documentElement","scrollTop","console","log","window","addEventListener","removeEventListener","handleScrollToTop","scrollTo","top","behavior","children","onClick","className","type","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Rui Seca/savannah-bites/frontend/src/components/ScrollToTop/index.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport styles from \"./styles.module.css\";\r\n\r\nconst ScrollToTop = () => {\r\n  const [isVisible, setIsVisible] = useState(false);\r\n\r\n  // Toggle visibility\r\n  const toggleVisibility = () => {\r\n    const scrolled = document.documentElement.scrollTop;\r\n    if (scrolled > 300) {\r\n      setIsVisible(true);\r\n    } else if (scrolled <= 300) {\r\n      setIsVisible(false);\r\n    }\r\n  };\r\n\r\n  // Add scroll event listener\r\n  useEffect(() => {\r\n    console.log(\"ScrollToTop component mounted\"); // Debug log\r\n    window.addEventListener(\"scroll\", toggleVisibility);\r\n\r\n    return () => {\r\n      window.removeEventListener(\"scroll\", toggleVisibility);\r\n    };\r\n  }, []);\r\n\r\n  // Scroll to top handler\r\n  const handleScrollToTop = () => {\r\n    window.scrollTo({\r\n      top: 0,\r\n      behavior: \"smooth\",\r\n    });\r\n  };\r\n\r\n  console.log(\"Visibility state:\", isVisible); // Debug log\r\n\r\n  return (\r\n    <>\r\n      {isVisible && (\r\n        <button\r\n          onClick={handleScrollToTop}\r\n          className={styles.scrollTop}\r\n          aria-label=\"Scroll to top\"\r\n          type=\"button\"\r\n        >\r\n          â†‘\r\n        </button>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ScrollToTop;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,MAAM,MAAM,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEzC,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;;EAEjD;EACA,MAAMW,gBAAgB,GAAGA,CAAA,KAAM;IAC7B,MAAMC,QAAQ,GAAGC,QAAQ,CAACC,eAAe,CAACC,SAAS;IACnD,IAAIH,QAAQ,GAAG,GAAG,EAAE;MAClBF,YAAY,CAAC,IAAI,CAAC;IACpB,CAAC,MAAM,IAAIE,QAAQ,IAAI,GAAG,EAAE;MAC1BF,YAAY,CAAC,KAAK,CAAC;IACrB;EACF,CAAC;;EAED;EACAT,SAAS,CAAC,MAAM;IACde,OAAO,CAACC,GAAG,CAAC,+BAA+B,CAAC,CAAC,CAAC;IAC9CC,MAAM,CAACC,gBAAgB,CAAC,QAAQ,EAAER,gBAAgB,CAAC;IAEnD,OAAO,MAAM;MACXO,MAAM,CAACE,mBAAmB,CAAC,QAAQ,EAAET,gBAAgB,CAAC;IACxD,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMU,iBAAiB,GAAGA,CAAA,KAAM;IAC9BH,MAAM,CAACI,QAAQ,CAAC;MACdC,GAAG,EAAE,CAAC;MACNC,QAAQ,EAAE;IACZ,CAAC,CAAC;EACJ,CAAC;EAEDR,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAER,SAAS,CAAC,CAAC,CAAC;;EAE7C,oBACEL,OAAA,CAAAE,SAAA;IAAAmB,QAAA,EACGhB,SAAS,iBACRL,OAAA;MACEsB,OAAO,EAAEL,iBAAkB;MAC3BM,SAAS,EAAEzB,MAAM,CAACa,SAAU;MAC5B,cAAW,eAAe;MAC1Ba,IAAI,EAAC,QAAQ;MAAAH,QAAA,EACd;IAED;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ;EACT,gBACD,CAAC;AAEP,CAAC;AAACxB,EAAA,CA/CID,WAAW;AAAA0B,EAAA,GAAX1B,WAAW;AAiDjB,eAAeA,WAAW;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}