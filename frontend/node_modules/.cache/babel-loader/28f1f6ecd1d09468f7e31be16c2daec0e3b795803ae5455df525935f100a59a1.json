{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rui Seca\\\\savannah-bites\\\\frontend\\\\src\\\\components\\\\ReservationConfirmationPage\\\\index.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback, useMemo } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { format } from \"date-fns\";\nimport ProgressStepsReservation from \"../ProgressStepsReservation\";\nimport \"./styles.css\";\n\n// API Configuration\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_CONFIG = {\n  baseURL: process.env.NODE_ENV === \"development\" ? process.env.REACT_APP_NGROK_URL || process.env.REACT_APP_API_BASE_URL : process.env.REACT_APP_API_BASE_URL,\n  endpoints: {\n    reservations: \"/api/reservations\",\n    availability: \"/api/reservations/availability\"\n  }\n};\n\n// Constants\nconst TIME_SLOTS = [{\n  id: 1,\n  label: \"11:00 AM\",\n  value: \"11:00\"\n}, {\n  id: 2,\n  label: \"1:00 PM\",\n  value: \"13:00\"\n}, {\n  id: 3,\n  label: \"3:00 PM\",\n  value: \"15:00\"\n}, {\n  id: 4,\n  label: \"5:00 PM\",\n  value: \"17:00\"\n}, {\n  id: 5,\n  label: \"7:00 PM\",\n  value: \"19:00\"\n}, {\n  id: 6,\n  label: \"9:00 PM\",\n  value: \"21:00\"\n}];\nconst GUEST_OPTIONS = [{\n  value: \"1\",\n  label: \"1 person\"\n}, {\n  value: \"2\",\n  label: \"2 people\"\n}, {\n  value: \"3\",\n  label: \"3 people\"\n}, {\n  value: \"4\",\n  label: \"4 people\"\n}, {\n  value: \"5\",\n  label: \"5 people\"\n}, {\n  value: \"6\",\n  label: \"6 people\"\n}, {\n  value: \"7+\",\n  label: \"7 or more (we'll contact you)\"\n}];\nconst INITIAL_FORM_STATE = {\n  guests: \"\",\n  name: \"\",\n  email: \"\",\n  phone: \"\",\n  allergies: \"\"\n};\n\n// API instance\nconst api = axios.create({\n  baseURL: API_CONFIG.baseURL.endsWith(\"/api\") ? API_CONFIG.baseURL : `${API_CONFIG.baseURL}/api`,\n  withCredentials: true,\n  headers: {\n    \"Content-Type\": \"application/json\"\n  }\n});\nconst ReservationPage = () => {\n  _s();\n  const navigate = useNavigate();\n  const today = useMemo(() => format(new Date(), \"yyyy-MM-dd\"), []);\n\n  // State\n  const [selectedDate, setSelectedDate] = useState(today);\n  const [selectedTime, setSelectedTime] = useState(\"\");\n  const [formData, setFormData] = useState(INITIAL_FORM_STATE);\n  const [availableTables, setAvailableTables] = useState({});\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(\"\");\n  const [submitting, setSubmitting] = useState(false);\n\n  // Format selected date for display\n  const formattedDate = useMemo(() => {\n    if (!selectedDate) return \"\";\n    return format(new Date(selectedDate), \"EEEE, MMMM d, yyyy\");\n  }, [selectedDate]);\n\n  // Format selected time for display\n  const formattedTime = useMemo(() => {\n    if (!selectedTime) return \"\";\n    const timeSlot = TIME_SLOTS.find(slot => slot.value === selectedTime);\n    return timeSlot ? timeSlot.label : \"\";\n  }, [selectedTime]);\n\n  // Fetch available tables\n  const fetchAvailableTables = useCallback(async date => {\n    if (!date) return;\n    const controller = new AbortController();\n    try {\n      setLoading(true);\n      setError(\"\");\n      const response = await api.get(`${API_CONFIG.endpoints.availability}/${date}`, {\n        signal: controller.signal\n      });\n      if (response.data.status === \"success\" && response.data.availability) {\n        setAvailableTables(response.data.availability);\n      } else {\n        // Set default availability\n        const defaultAvailability = TIME_SLOTS.reduce((acc, slot) => {\n          acc[slot.value] = 10;\n          return acc;\n        }, {});\n        setAvailableTables(defaultAvailability);\n      }\n    } catch (err) {\n      if (!axios.isCancel(err)) {\n        console.error(\"Error fetching availability:\", err);\n        setError(\"Failed to fetch availability. Please try again.\");\n      }\n    } finally {\n      setLoading(false);\n    }\n    return () => controller.abort();\n  }, []);\n\n  // Fetch available tables when date changes\n  useEffect(() => {\n    const timeoutId = selectedDate ? setTimeout(() => fetchAvailableTables(selectedDate), 300) : null;\n    return () => timeoutId && clearTimeout(timeoutId);\n  }, [selectedDate, fetchAvailableTables]);\n\n  // Form validation\n  const validateForm = useCallback(() => {\n    if (!selectedDate) return \"Please select a date\";\n    if (!selectedTime) return \"Please select a time slot\";\n    if (!formData.guests) return \"Please select number of guests\";\n    if (!formData.name.trim()) return \"Please enter your name\";\n    if (!formData.email.trim()) return \"Please enter your email\";\n    if (!formData.phone.trim()) return \"Please enter your phone number\";\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    if (!emailRegex.test(formData.email.trim())) {\n      return \"Please enter a valid email address\";\n    }\n    const phoneRegex = /^[\\d\\s-+()]{10,}$/;\n    if (!phoneRegex.test(formData.phone.replace(/\\s+/g, \"\"))) {\n      return \"Please enter a valid phone number\";\n    }\n    return null;\n  }, [selectedDate, selectedTime, formData]);\n\n  // Event handlers\n  const handleInputChange = useCallback(e => {\n    const {\n      id,\n      value\n    } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [id]: value\n    }));\n    setError(\"\");\n  }, []);\n  const handleTimeSlotClick = useCallback(time => {\n    if (availableTables[time] > 0) {\n      setSelectedTime(time);\n      setError(\"\");\n    }\n  }, [availableTables]);\n  const handleDateChange = useCallback(e => {\n    const newDate = new Date(e.target.value);\n    const currentDate = new Date();\n    currentDate.setHours(0, 0, 0, 0);\n    newDate.setHours(0, 0, 0, 0);\n    if (newDate >= currentDate) {\n      setSelectedDate(e.target.value);\n      setSelectedTime(\"\");\n    } else {\n      alert(\"Please select a future date\");\n    }\n  }, []);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const validationError = validateForm();\n    if (validationError) {\n      setError(validationError);\n      return;\n    }\n    try {\n      setSubmitting(true);\n      setError(\"\");\n      const reservationData = {\n        ...formData,\n        date: selectedDate,\n        time: selectedTime\n      };\n      const response = await api.post(API_CONFIG.endpoints.reservations, reservationData);\n      if (response.data.status === \"success\" && response.data.data) {\n        navigate(\"/reservation-confirmation\", {\n          state: {\n            reservationId: response.data.data.reservationId,\n            reservation: {\n              ...reservationData,\n              id: response.data.data.reservationId,\n              status: response.data.data.status,\n              formattedDate,\n              formattedTime\n            }\n          }\n        });\n      } else {\n        throw new Error(response.data.message || \"Failed to create reservation\");\n      }\n    } catch (err) {\n      var _err$response, _err$response$data, _err$response2, _err$response2$data, _err$response2$data$e;\n      console.error(\"Submission error:\", err);\n      setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || ((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : (_err$response2$data$e = _err$response2$data.errors) === null || _err$response2$data$e === void 0 ? void 0 : _err$response2$data$e.join(\", \")) || \"Failed to submit reservation. Please try again.\");\n    } finally {\n      setSubmitting(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"reservation-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"reservation-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Make a Reservation\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Book Your Table at Savannah Bites\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"reservation-content\",\n      children: [/*#__PURE__*/_jsxDEV(ProgressStepsReservation, {\n        currentStep: 1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        role: \"alert\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        className: \"reservation-form\",\n        noValidate: true,\n        children: [/*#__PURE__*/_jsxDEV(\"section\", {\n          className: \"form-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Choose Your Date & Time\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-row\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"date\",\n                children: \"Select Date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 259,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"date\",\n                id: \"date\",\n                required: true,\n                min: today,\n                value: selectedDate,\n                onChange: handleDateChange,\n                className: \"date-input\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 260,\n                columnNumber: 17\n              }, this), selectedDate && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"selected-date\",\n                children: formattedDate\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 270,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 258,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-row\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group full-width\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Available Time Slots\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 277,\n                columnNumber: 17\n              }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"loading-indicator\",\n                children: \"Loading available times...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 279,\n                columnNumber: 19\n              }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"time-slots-grid\",\n                children: TIME_SLOTS.map(({\n                  id,\n                  label,\n                  value\n                }) => /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"button\",\n                  className: `time-slot ${selectedTime === value ? \"selected\" : \"\"} \n                                   ${availableTables[value] === 0 ? \"full\" : \"\"}`,\n                  onClick: () => handleTimeSlotClick(value),\n                  disabled: availableTables[value] === 0,\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"time\",\n                    children: label\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 293,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"tables-left\",\n                    children: [availableTables[value] || 0, \" tables available\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 294,\n                    columnNumber: 25\n                  }, this)]\n                }, id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 285,\n                  columnNumber: 23\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 283,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 276,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n          className: \"form-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Guest Information\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 306,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-row\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"guests\",\n                children: \"Number of Guests\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 310,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                id: \"guests\",\n                required: true,\n                value: formData.guests,\n                onChange: handleInputChange,\n                className: \"select-input\",\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  children: \"Select guests\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 318,\n                  columnNumber: 19\n                }, this), GUEST_OPTIONS.map(({\n                  value,\n                  label\n                }) => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: value,\n                  children: label\n                }, value, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 320,\n                  columnNumber: 21\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 311,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 309,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 308,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-row two-columns\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"name\",\n                children: \"Full Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 330,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                id: \"name\",\n                required: true,\n                value: formData.name,\n                onChange: handleInputChange,\n                placeholder: \"Enter your full name\",\n                className: \"text-input\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 331,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 329,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"phone\",\n                children: \"Phone Number\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 343,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"tel\",\n                id: \"phone\",\n                required: true,\n                value: formData.phone,\n                onChange: handleInputChange,\n                placeholder: \"Enter your phone number\",\n                className: \"text-input\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 344,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 342,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 328,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-row\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"email\",\n                children: \"Email Address\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 358,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"email\",\n                id: \"email\",\n                required: true,\n                value: formData.email,\n                onChange: handleInputChange,\n                placeholder: \"Enter your email address\",\n                className: \"text-input\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 359,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 357,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 356,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-row\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"allergies\",\n                children: \"Food Allergies\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 373,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                id: \"allergies\",\n                value: formData.allergies,\n                onChange: handleInputChange,\n                placeholder: \"List any allergies (optional)\",\n                className: \"textarea-input\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 374,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 372,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 371,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 11\n        }, this), selectedDate && selectedTime && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"reservation-summary\",\n          children: [\"Booking for: \", formattedDate, \" at \", formattedTime]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 386,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-actions\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: `submit-button ${submitting ? \"submitting\" : \"\"}`,\n            disabled: submitting || loading,\n            children: submitting ? \"Processing...\" : \"Confirm Reservation\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 392,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 391,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 238,\n    columnNumber: 5\n  }, this);\n};\n_s(ReservationPage, \"KBWN8gBNdRoilFqkTo6RIcfKef0=\", false, function () {\n  return [useNavigate];\n});\n_c = ReservationPage;\nexport default ReservationPage;\nvar _c;\n$RefreshReg$(_c, \"ReservationPage\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useMemo","useNavigate","axios","format","ProgressStepsReservation","jsxDEV","_jsxDEV","API_CONFIG","baseURL","process","env","NODE_ENV","REACT_APP_NGROK_URL","REACT_APP_API_BASE_URL","endpoints","reservations","availability","TIME_SLOTS","id","label","value","GUEST_OPTIONS","INITIAL_FORM_STATE","guests","name","email","phone","allergies","api","create","endsWith","withCredentials","headers","ReservationPage","_s","navigate","today","Date","selectedDate","setSelectedDate","selectedTime","setSelectedTime","formData","setFormData","availableTables","setAvailableTables","loading","setLoading","error","setError","submitting","setSubmitting","formattedDate","formattedTime","timeSlot","find","slot","fetchAvailableTables","date","controller","AbortController","response","get","signal","data","status","defaultAvailability","reduce","acc","err","isCancel","console","abort","timeoutId","setTimeout","clearTimeout","validateForm","trim","emailRegex","test","phoneRegex","replace","handleInputChange","e","target","prev","handleTimeSlotClick","time","handleDateChange","newDate","currentDate","setHours","alert","handleSubmit","preventDefault","validationError","reservationData","post","state","reservationId","reservation","Error","message","_err$response","_err$response$data","_err$response2","_err$response2$data","_err$response2$data$e","errors","join","className","children","fileName","_jsxFileName","lineNumber","columnNumber","currentStep","role","onSubmit","noValidate","htmlFor","type","required","min","onChange","map","onClick","disabled","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/Rui Seca/savannah-bites/frontend/src/components/ReservationConfirmationPage/index.jsx"],"sourcesContent":["import React, { useState, useEffect, useCallback, useMemo } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { format } from \"date-fns\";\r\nimport ProgressStepsReservation from \"../ProgressStepsReservation\";\r\nimport \"./styles.css\";\r\n\r\n// API Configuration\r\nconst API_CONFIG = {\r\n  baseURL:\r\n    process.env.NODE_ENV === \"development\"\r\n      ? process.env.REACT_APP_NGROK_URL || process.env.REACT_APP_API_BASE_URL\r\n      : process.env.REACT_APP_API_BASE_URL,\r\n  endpoints: {\r\n    reservations: \"/api/reservations\",\r\n    availability: \"/api/reservations/availability\",\r\n  },\r\n};\r\n\r\n// Constants\r\nconst TIME_SLOTS = [\r\n  { id: 1, label: \"11:00 AM\", value: \"11:00\" },\r\n  { id: 2, label: \"1:00 PM\", value: \"13:00\" },\r\n  { id: 3, label: \"3:00 PM\", value: \"15:00\" },\r\n  { id: 4, label: \"5:00 PM\", value: \"17:00\" },\r\n  { id: 5, label: \"7:00 PM\", value: \"19:00\" },\r\n  { id: 6, label: \"9:00 PM\", value: \"21:00\" },\r\n];\r\n\r\nconst GUEST_OPTIONS = [\r\n  { value: \"1\", label: \"1 person\" },\r\n  { value: \"2\", label: \"2 people\" },\r\n  { value: \"3\", label: \"3 people\" },\r\n  { value: \"4\", label: \"4 people\" },\r\n  { value: \"5\", label: \"5 people\" },\r\n  { value: \"6\", label: \"6 people\" },\r\n  { value: \"7+\", label: \"7 or more (we'll contact you)\" },\r\n];\r\n\r\nconst INITIAL_FORM_STATE = {\r\n  guests: \"\",\r\n  name: \"\",\r\n  email: \"\",\r\n  phone: \"\",\r\n  allergies: \"\",\r\n};\r\n\r\n// API instance\r\nconst api = axios.create({\r\n  baseURL: API_CONFIG.baseURL.endsWith(\"/api\")\r\n    ? API_CONFIG.baseURL\r\n    : `${API_CONFIG.baseURL}/api`,\r\n  withCredentials: true,\r\n  headers: { \"Content-Type\": \"application/json\" },\r\n});\r\n\r\nconst ReservationPage = () => {\r\n  const navigate = useNavigate();\r\n  const today = useMemo(() => format(new Date(), \"yyyy-MM-dd\"), []);\r\n\r\n  // State\r\n  const [selectedDate, setSelectedDate] = useState(today);\r\n  const [selectedTime, setSelectedTime] = useState(\"\");\r\n  const [formData, setFormData] = useState(INITIAL_FORM_STATE);\r\n  const [availableTables, setAvailableTables] = useState({});\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(\"\");\r\n  const [submitting, setSubmitting] = useState(false);\r\n\r\n  // Format selected date for display\r\n  const formattedDate = useMemo(() => {\r\n    if (!selectedDate) return \"\";\r\n    return format(new Date(selectedDate), \"EEEE, MMMM d, yyyy\");\r\n  }, [selectedDate]);\r\n\r\n  // Format selected time for display\r\n  const formattedTime = useMemo(() => {\r\n    if (!selectedTime) return \"\";\r\n    const timeSlot = TIME_SLOTS.find((slot) => slot.value === selectedTime);\r\n    return timeSlot ? timeSlot.label : \"\";\r\n  }, [selectedTime]);\r\n\r\n  // Fetch available tables\r\n  const fetchAvailableTables = useCallback(async (date) => {\r\n    if (!date) return;\r\n\r\n    const controller = new AbortController();\r\n    try {\r\n      setLoading(true);\r\n      setError(\"\");\r\n\r\n      const response = await api.get(\r\n        `${API_CONFIG.endpoints.availability}/${date}`,\r\n        {\r\n          signal: controller.signal,\r\n        }\r\n      );\r\n\r\n      if (response.data.status === \"success\" && response.data.availability) {\r\n        setAvailableTables(response.data.availability);\r\n      } else {\r\n        // Set default availability\r\n        const defaultAvailability = TIME_SLOTS.reduce((acc, slot) => {\r\n          acc[slot.value] = 10;\r\n          return acc;\r\n        }, {});\r\n        setAvailableTables(defaultAvailability);\r\n      }\r\n    } catch (err) {\r\n      if (!axios.isCancel(err)) {\r\n        console.error(\"Error fetching availability:\", err);\r\n        setError(\"Failed to fetch availability. Please try again.\");\r\n      }\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n\r\n    return () => controller.abort();\r\n  }, []);\r\n\r\n  // Fetch available tables when date changes\r\n  useEffect(() => {\r\n    const timeoutId = selectedDate\r\n      ? setTimeout(() => fetchAvailableTables(selectedDate), 300)\r\n      : null;\r\n    return () => timeoutId && clearTimeout(timeoutId);\r\n  }, [selectedDate, fetchAvailableTables]);\r\n\r\n  // Form validation\r\n  const validateForm = useCallback(() => {\r\n    if (!selectedDate) return \"Please select a date\";\r\n    if (!selectedTime) return \"Please select a time slot\";\r\n    if (!formData.guests) return \"Please select number of guests\";\r\n    if (!formData.name.trim()) return \"Please enter your name\";\r\n    if (!formData.email.trim()) return \"Please enter your email\";\r\n    if (!formData.phone.trim()) return \"Please enter your phone number\";\r\n\r\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n    if (!emailRegex.test(formData.email.trim())) {\r\n      return \"Please enter a valid email address\";\r\n    }\r\n\r\n    const phoneRegex = /^[\\d\\s-+()]{10,}$/;\r\n    if (!phoneRegex.test(formData.phone.replace(/\\s+/g, \"\"))) {\r\n      return \"Please enter a valid phone number\";\r\n    }\r\n\r\n    return null;\r\n  }, [selectedDate, selectedTime, formData]);\r\n\r\n  // Event handlers\r\n  const handleInputChange = useCallback((e) => {\r\n    const { id, value } = e.target;\r\n    setFormData((prev) => ({ ...prev, [id]: value }));\r\n    setError(\"\");\r\n  }, []);\r\n\r\n  const handleTimeSlotClick = useCallback(\r\n    (time) => {\r\n      if (availableTables[time] > 0) {\r\n        setSelectedTime(time);\r\n        setError(\"\");\r\n      }\r\n    },\r\n    [availableTables]\r\n  );\r\n\r\n  const handleDateChange = useCallback((e) => {\r\n    const newDate = new Date(e.target.value);\r\n    const currentDate = new Date();\r\n\r\n    currentDate.setHours(0, 0, 0, 0);\r\n    newDate.setHours(0, 0, 0, 0);\r\n\r\n    if (newDate >= currentDate) {\r\n      setSelectedDate(e.target.value);\r\n      setSelectedTime(\"\");\r\n    } else {\r\n      alert(\"Please select a future date\");\r\n    }\r\n  }, []);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const validationError = validateForm();\r\n\r\n    if (validationError) {\r\n      setError(validationError);\r\n      return;\r\n    }\r\n\r\n    try {\r\n      setSubmitting(true);\r\n      setError(\"\");\r\n\r\n      const reservationData = {\r\n        ...formData,\r\n        date: selectedDate,\r\n        time: selectedTime,\r\n      };\r\n\r\n      const response = await api.post(\r\n        API_CONFIG.endpoints.reservations,\r\n        reservationData\r\n      );\r\n\r\n      if (response.data.status === \"success\" && response.data.data) {\r\n        navigate(\"/reservation-confirmation\", {\r\n          state: {\r\n            reservationId: response.data.data.reservationId,\r\n            reservation: {\r\n              ...reservationData,\r\n              id: response.data.data.reservationId,\r\n              status: response.data.data.status,\r\n              formattedDate,\r\n              formattedTime,\r\n            },\r\n          },\r\n        });\r\n      } else {\r\n        throw new Error(\r\n          response.data.message || \"Failed to create reservation\"\r\n        );\r\n      }\r\n    } catch (err) {\r\n      console.error(\"Submission error:\", err);\r\n      setError(\r\n        err.response?.data?.message ||\r\n          err.response?.data?.errors?.join(\", \") ||\r\n          \"Failed to submit reservation. Please try again.\"\r\n      );\r\n    } finally {\r\n      setSubmitting(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"reservation-page\">\r\n      <header className=\"reservation-header\">\r\n        <h1>Make a Reservation</h1>\r\n        <p>Book Your Table at Savannah Bites</p>\r\n      </header>\r\n\r\n      <main className=\"reservation-content\">\r\n        <ProgressStepsReservation currentStep={1} />\r\n\r\n        {error && (\r\n          <div className=\"error-message\" role=\"alert\">\r\n            {error}\r\n          </div>\r\n        )}\r\n\r\n        <form onSubmit={handleSubmit} className=\"reservation-form\" noValidate>\r\n          <section className=\"form-section\">\r\n            <h2>Choose Your Date & Time</h2>\r\n\r\n            <div className=\"form-row\">\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"date\">Select Date</label>\r\n                <input\r\n                  type=\"date\"\r\n                  id=\"date\"\r\n                  required\r\n                  min={today}\r\n                  value={selectedDate}\r\n                  onChange={handleDateChange}\r\n                  className=\"date-input\"\r\n                />\r\n                {selectedDate && (\r\n                  <span className=\"selected-date\">{formattedDate}</span>\r\n                )}\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"form-row\">\r\n              <div className=\"form-group full-width\">\r\n                <label>Available Time Slots</label>\r\n                {loading ? (\r\n                  <div className=\"loading-indicator\">\r\n                    Loading available times...\r\n                  </div>\r\n                ) : (\r\n                  <div className=\"time-slots-grid\">\r\n                    {TIME_SLOTS.map(({ id, label, value }) => (\r\n                      <button\r\n                        key={id}\r\n                        type=\"button\"\r\n                        className={`time-slot ${selectedTime === value ? \"selected\" : \"\"} \r\n                                   ${availableTables[value] === 0 ? \"full\" : \"\"}`}\r\n                        onClick={() => handleTimeSlotClick(value)}\r\n                        disabled={availableTables[value] === 0}\r\n                      >\r\n                        <span className=\"time\">{label}</span>\r\n                        <span className=\"tables-left\">\r\n                          {availableTables[value] || 0} tables available\r\n                        </span>\r\n                      </button>\r\n                    ))}\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </section>\r\n\r\n          <section className=\"form-section\">\r\n            <h2>Guest Information</h2>\r\n\r\n            <div className=\"form-row\">\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"guests\">Number of Guests</label>\r\n                <select\r\n                  id=\"guests\"\r\n                  required\r\n                  value={formData.guests}\r\n                  onChange={handleInputChange}\r\n                  className=\"select-input\"\r\n                >\r\n                  <option value=\"\">Select guests</option>\r\n                  {GUEST_OPTIONS.map(({ value, label }) => (\r\n                    <option key={value} value={value}>\r\n                      {label}\r\n                    </option>\r\n                  ))}\r\n                </select>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"form-row two-columns\">\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"name\">Full Name</label>\r\n                <input\r\n                  type=\"text\"\r\n                  id=\"name\"\r\n                  required\r\n                  value={formData.name}\r\n                  onChange={handleInputChange}\r\n                  placeholder=\"Enter your full name\"\r\n                  className=\"text-input\"\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"phone\">Phone Number</label>\r\n                <input\r\n                  type=\"tel\"\r\n                  id=\"phone\"\r\n                  required\r\n                  value={formData.phone}\r\n                  onChange={handleInputChange}\r\n                  placeholder=\"Enter your phone number\"\r\n                  className=\"text-input\"\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"form-row\">\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"email\">Email Address</label>\r\n                <input\r\n                  type=\"email\"\r\n                  id=\"email\"\r\n                  required\r\n                  value={formData.email}\r\n                  onChange={handleInputChange}\r\n                  placeholder=\"Enter your email address\"\r\n                  className=\"text-input\"\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"form-row\">\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"allergies\">Food Allergies</label>\r\n                <textarea\r\n                  id=\"allergies\"\r\n                  value={formData.allergies}\r\n                  onChange={handleInputChange}\r\n                  placeholder=\"List any allergies (optional)\"\r\n                  className=\"textarea-input\"\r\n                />\r\n              </div>\r\n            </div>\r\n          </section>\r\n\r\n          {selectedDate && selectedTime && (\r\n            <div className=\"reservation-summary\">\r\n              Booking for: {formattedDate} at {formattedTime}\r\n            </div>\r\n          )}\r\n\r\n          <div className=\"form-actions\">\r\n            <button\r\n              type=\"submit\"\r\n              className={`submit-button ${submitting ? \"submitting\" : \"\"}`}\r\n              disabled={submitting || loading}\r\n            >\r\n              {submitting ? \"Processing...\" : \"Confirm Reservation\"}\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </main>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ReservationPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}