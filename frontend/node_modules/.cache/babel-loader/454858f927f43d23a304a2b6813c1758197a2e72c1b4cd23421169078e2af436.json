{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rui Seca\\\\savannah-bites\\\\frontend\\\\src\\\\context\\\\CartContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useCallback, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CartContext = /*#__PURE__*/createContext();\nconst CART_STORAGE_KEY = \"savannah_bites_cart\";\nconst CART_TIMEOUT = 15 * 60 * 1000; // 15 minutes in milliseconds\n\nexport function CartProvider({\n  children\n}) {\n  _s();\n  const [cart, setCart] = useState(() => {\n    try {\n      const savedCart = localStorage.getItem(CART_STORAGE_KEY);\n      return savedCart ? JSON.parse(savedCart) : [];\n    } catch (error) {\n      console.error(\"Error loading cart from storage:\", error);\n      return [];\n    }\n  });\n  const [lastUpdated, setLastUpdated] = useState(Date.now());\n  useEffect(() => {\n    try {\n      localStorage.setItem(CART_STORAGE_KEY, JSON.stringify(cart));\n      setLastUpdated(Date.now());\n    } catch (error) {\n      console.error(\"Error saving cart to storage:\", error);\n    }\n  }, [cart]);\n  const clearCart = useCallback(() => {\n    setCart([]);\n    localStorage.removeItem(CART_STORAGE_KEY);\n  }, []);\n  useEffect(() => {\n    const checkCartTimeout = () => {\n      if (Date.now() - lastUpdated > CART_TIMEOUT) {\n        clearCart();\n      }\n    };\n    const interval = setInterval(checkCartTimeout, 1000 * 60);\n    return () => clearInterval(interval);\n  }, [lastUpdated, clearCart]);\n\n  // Generate a unique key for each item based on id and size\n  const getItemKey = useCallback((id, size) => `${id}-${size || \"default\"}`, []);\n  const addToCart = useCallback(item => {\n    setCart(currentCart => {\n      const itemKey = getItemKey(item.id, item.size);\n      const existingItemIndex = currentCart.findIndex(cartItem => getItemKey(cartItem.id, cartItem.size) === itemKey);\n      if (existingItemIndex !== -1) {\n        return currentCart.map((cartItem, index) => index === existingItemIndex ? {\n          ...cartItem,\n          quantity: cartItem.quantity + 1\n        } : cartItem);\n      }\n      return [...currentCart, {\n        ...item,\n        quantity: 1,\n        cartItemId: itemKey,\n        // Add a unique identifier\n        addedAt: new Date().toISOString()\n      }];\n    });\n  }, [getItemKey]);\n  const removeFromCart = useCallback((itemId, size = null) => {\n    setCart(currentCart => {\n      const itemKey = getItemKey(itemId, size);\n      return currentCart.filter(item => getItemKey(item.id, item.size) !== itemKey);\n    });\n  }, [getItemKey]);\n  const updateQuantity = useCallback((itemId, newQuantity, size = null) => {\n    if (newQuantity < 1) {\n      removeFromCart(itemId, size);\n      return;\n    }\n    setCart(currentCart => {\n      const itemKey = getItemKey(itemId, size);\n      return currentCart.map(item => getItemKey(item.id, item.size) === itemKey ? {\n        ...item,\n        quantity: newQuantity\n      } : item);\n    });\n  }, [removeFromCart, getItemKey]);\n  const getItemPrice = useCallback(item => {\n    if (typeof item.price === \"object\") {\n      return item.selectedPrice || item.price[item.size] || Object.values(item.price)[0];\n    }\n    return item.price;\n  }, []);\n  const cartTotal = useCallback(() => {\n    return cart.reduce((total, item) => {\n      const price = getItemPrice(item);\n      return total + price * item.quantity;\n    }, 0);\n  }, [cart, getItemPrice]);\n  const cartItemsCount = useCallback(() => {\n    return cart.reduce((total, item) => total + item.quantity, 0);\n  }, [cart]);\n  const isItemInCart = useCallback((itemId, size = null) => {\n    const itemKey = getItemKey(itemId, size);\n    return cart.some(item => getItemKey(item.id, item.size) === itemKey);\n  }, [cart, getItemKey]);\n  const updateItemNote = useCallback((itemId, note, size = null) => {\n    setCart(currentCart => {\n      const itemKey = getItemKey(itemId, size);\n      return currentCart.map(item => getItemKey(item.id, item.size) === itemKey ? {\n        ...item,\n        note\n      } : item);\n    });\n  }, [getItemKey]);\n  const value = {\n    cart,\n    addToCart,\n    removeFromCart,\n    updateQuantity,\n    clearCart,\n    cartTotal,\n    cartItemsCount,\n    isItemInCart,\n    updateItemNote,\n    getItemPrice\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 175,\n    columnNumber: 10\n  }, this);\n}\n_s(CartProvider, \"zesg9kL1FT19kkKzQOo4HBwJ6u4=\");\n_c = CartProvider;\nexport function useCart() {\n  _s2();\n  const context = useContext(CartContext);\n  if (context === undefined) {\n    throw new Error(\"useCart must be used within a CartProvider\");\n  }\n  return context;\n}\n_s2(useCart, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useCallback","useEffect","jsxDEV","_jsxDEV","CartContext","CART_STORAGE_KEY","CART_TIMEOUT","CartProvider","children","_s","cart","setCart","savedCart","localStorage","getItem","JSON","parse","error","console","lastUpdated","setLastUpdated","Date","now","setItem","stringify","clearCart","removeItem","checkCartTimeout","interval","setInterval","clearInterval","getItemKey","id","size","addToCart","item","currentCart","itemKey","existingItemIndex","findIndex","cartItem","map","index","quantity","cartItemId","addedAt","toISOString","removeFromCart","itemId","filter","updateQuantity","newQuantity","getItemPrice","price","selectedPrice","Object","values","cartTotal","reduce","total","cartItemsCount","isItemInCart","some","updateItemNote","note","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useCart","_s2","context","undefined","Error","$RefreshReg$"],"sources":["C:/Users/Rui Seca/savannah-bites/frontend/src/context/CartContext.js"],"sourcesContent":["import React, {\r\n  createContext,\r\n  useContext,\r\n  useState,\r\n  useCallback,\r\n  useEffect,\r\n} from \"react\";\r\n\r\nconst CartContext = createContext();\r\n\r\nconst CART_STORAGE_KEY = \"savannah_bites_cart\";\r\nconst CART_TIMEOUT = 15 * 60 * 1000; // 15 minutes in milliseconds\r\n\r\nexport function CartProvider({ children }) {\r\n  const [cart, setCart] = useState(() => {\r\n    try {\r\n      const savedCart = localStorage.getItem(CART_STORAGE_KEY);\r\n      return savedCart ? JSON.parse(savedCart) : [];\r\n    } catch (error) {\r\n      console.error(\"Error loading cart from storage:\", error);\r\n      return [];\r\n    }\r\n  });\r\n\r\n  const [lastUpdated, setLastUpdated] = useState(Date.now());\r\n\r\n  useEffect(() => {\r\n    try {\r\n      localStorage.setItem(CART_STORAGE_KEY, JSON.stringify(cart));\r\n      setLastUpdated(Date.now());\r\n    } catch (error) {\r\n      console.error(\"Error saving cart to storage:\", error);\r\n    }\r\n  }, [cart]);\r\n\r\n  const clearCart = useCallback(() => {\r\n    setCart([]);\r\n    localStorage.removeItem(CART_STORAGE_KEY);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const checkCartTimeout = () => {\r\n      if (Date.now() - lastUpdated > CART_TIMEOUT) {\r\n        clearCart();\r\n      }\r\n    };\r\n\r\n    const interval = setInterval(checkCartTimeout, 1000 * 60);\r\n    return () => clearInterval(interval);\r\n  }, [lastUpdated, clearCart]);\r\n\r\n  // Generate a unique key for each item based on id and size\r\n  const getItemKey = useCallback(\r\n    (id, size) => `${id}-${size || \"default\"}`,\r\n    []\r\n  );\r\n\r\n  const addToCart = useCallback(\r\n    (item) => {\r\n      setCart((currentCart) => {\r\n        const itemKey = getItemKey(item.id, item.size);\r\n\r\n        const existingItemIndex = currentCart.findIndex(\r\n          (cartItem) => getItemKey(cartItem.id, cartItem.size) === itemKey\r\n        );\r\n\r\n        if (existingItemIndex !== -1) {\r\n          return currentCart.map((cartItem, index) =>\r\n            index === existingItemIndex\r\n              ? { ...cartItem, quantity: cartItem.quantity + 1 }\r\n              : cartItem\r\n          );\r\n        }\r\n\r\n        return [\r\n          ...currentCart,\r\n          {\r\n            ...item,\r\n            quantity: 1,\r\n            cartItemId: itemKey, // Add a unique identifier\r\n            addedAt: new Date().toISOString(),\r\n          },\r\n        ];\r\n      });\r\n    },\r\n    [getItemKey]\r\n  );\r\n\r\n  const removeFromCart = useCallback(\r\n    (itemId, size = null) => {\r\n      setCart((currentCart) => {\r\n        const itemKey = getItemKey(itemId, size);\r\n        return currentCart.filter(\r\n          (item) => getItemKey(item.id, item.size) !== itemKey\r\n        );\r\n      });\r\n    },\r\n    [getItemKey]\r\n  );\r\n\r\n  const updateQuantity = useCallback(\r\n    (itemId, newQuantity, size = null) => {\r\n      if (newQuantity < 1) {\r\n        removeFromCart(itemId, size);\r\n        return;\r\n      }\r\n\r\n      setCart((currentCart) => {\r\n        const itemKey = getItemKey(itemId, size);\r\n        return currentCart.map((item) =>\r\n          getItemKey(item.id, item.size) === itemKey\r\n            ? { ...item, quantity: newQuantity }\r\n            : item\r\n        );\r\n      });\r\n    },\r\n    [removeFromCart, getItemKey]\r\n  );\r\n\r\n  const getItemPrice = useCallback((item) => {\r\n    if (typeof item.price === \"object\") {\r\n      return (\r\n        item.selectedPrice ||\r\n        item.price[item.size] ||\r\n        Object.values(item.price)[0]\r\n      );\r\n    }\r\n    return item.price;\r\n  }, []);\r\n\r\n  const cartTotal = useCallback(() => {\r\n    return cart.reduce((total, item) => {\r\n      const price = getItemPrice(item);\r\n      return total + price * item.quantity;\r\n    }, 0);\r\n  }, [cart, getItemPrice]);\r\n\r\n  const cartItemsCount = useCallback(() => {\r\n    return cart.reduce((total, item) => total + item.quantity, 0);\r\n  }, [cart]);\r\n\r\n  const isItemInCart = useCallback(\r\n    (itemId, size = null) => {\r\n      const itemKey = getItemKey(itemId, size);\r\n      return cart.some((item) => getItemKey(item.id, item.size) === itemKey);\r\n    },\r\n    [cart, getItemKey]\r\n  );\r\n\r\n  const updateItemNote = useCallback(\r\n    (itemId, note, size = null) => {\r\n      setCart((currentCart) => {\r\n        const itemKey = getItemKey(itemId, size);\r\n        return currentCart.map((item) =>\r\n          getItemKey(item.id, item.size) === itemKey ? { ...item, note } : item\r\n        );\r\n      });\r\n    },\r\n    [getItemKey]\r\n  );\r\n\r\n  const value = {\r\n    cart,\r\n    addToCart,\r\n    removeFromCart,\r\n    updateQuantity,\r\n    clearCart,\r\n    cartTotal,\r\n    cartItemsCount,\r\n    isItemInCart,\r\n    updateItemNote,\r\n    getItemPrice,\r\n  };\r\n\r\n  return <CartContext.Provider value={value}>{children}</CartContext.Provider>;\r\n}\r\n\r\nexport function useCart() {\r\n  const context = useContext(CartContext);\r\n  if (context === undefined) {\r\n    throw new Error(\"useCart must be used within a CartProvider\");\r\n  }\r\n  return context;\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}