{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rui Seca\\\\savannah-bites\\\\frontend\\\\src\\\\components\\\\ScrollToTopButton\\\\index.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"./styles.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ScrollToTopButton = () => {\n  _s();\n  const [isVisible, setIsVisible] = useState(false);\n  const [isScrollingUp, setIsScrollingUp] = useState(false);\n  let lastScrollY = window.scrollY;\n\n  // Handle scroll event\n  useEffect(() => {\n    const handleScroll = () => {\n      const currentScrollY = window.scrollY;\n      const scrollThreshold = 100;\n\n      // Determine scroll direction and visibility\n      setIsVisible(currentScrollY > scrollThreshold);\n      setIsScrollingUp(currentScrollY < lastScrollY);\n      lastScrollY = currentScrollY;\n    };\n    window.addEventListener(\"scroll\", handleScroll, {\n      passive: true\n    });\n    return () => {\n      window.removeEventListener(\"scroll\", handleScroll);\n    };\n  }, []);\n\n  // Scroll to top function\n  const scrollToTop = () => {\n    window.scrollTo({\n      top: 0,\n      behavior: \"smooth\"\n    });\n  };\n\n  // Determine button classes based on state\n  const buttonClasses = `scrollToTopButton ${isVisible ? \"scroll-show\" : \"scroll-hide\"} ${isScrollingUp ? \"scrolling-up\" : \"\"}`;\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: buttonClasses,\n    onClick: scrollToTop,\n    \"aria-label\": \"Scroll to top\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(ScrollToTopButton, \"hbTOWYKaGKioAU8LZwyJcqP5Mj0=\");\n_c = ScrollToTopButton;\nexport default ScrollToTopButton;\nvar _c;\n$RefreshReg$(_c, \"ScrollToTopButton\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","ScrollToTopButton","_s","isVisible","setIsVisible","isScrollingUp","setIsScrollingUp","lastScrollY","window","scrollY","handleScroll","currentScrollY","scrollThreshold","addEventListener","passive","removeEventListener","scrollToTop","scrollTo","top","behavior","buttonClasses","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Rui Seca/savannah-bites/frontend/src/components/ScrollToTopButton/index.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"./styles.css\";\r\n\r\nconst ScrollToTopButton = () => {\r\n  const [isVisible, setIsVisible] = useState(false);\r\n  const [isScrollingUp, setIsScrollingUp] = useState(false);\r\n  let lastScrollY = window.scrollY;\r\n\r\n  // Handle scroll event\r\n  useEffect(() => {\r\n    const handleScroll = () => {\r\n      const currentScrollY = window.scrollY;\r\n      const scrollThreshold = 100;\r\n\r\n      // Determine scroll direction and visibility\r\n      setIsVisible(currentScrollY > scrollThreshold);\r\n      setIsScrollingUp(currentScrollY < lastScrollY);\r\n\r\n      lastScrollY = currentScrollY;\r\n    };\r\n\r\n    window.addEventListener(\"scroll\", handleScroll, { passive: true });\r\n\r\n    return () => {\r\n      window.removeEventListener(\"scroll\", handleScroll);\r\n    };\r\n  }, []);\r\n\r\n  // Scroll to top function\r\n  const scrollToTop = () => {\r\n    window.scrollTo({\r\n      top: 0,\r\n      behavior: \"smooth\",\r\n    });\r\n  };\r\n\r\n  // Determine button classes based on state\r\n  const buttonClasses = `scrollToTopButton ${\r\n    isVisible ? \"scroll-show\" : \"scroll-hide\"\r\n  } ${isScrollingUp ? \"scrolling-up\" : \"\"}`;\r\n\r\n  return (\r\n    <button\r\n      className={buttonClasses}\r\n      onClick={scrollToTop}\r\n      aria-label=\"Scroll to top\"\r\n    />\r\n  );\r\n};\r\n\r\nexport default ScrollToTopButton;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtB,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC9B,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACQ,aAAa,EAAEC,gBAAgB,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EACzD,IAAIU,WAAW,GAAGC,MAAM,CAACC,OAAO;;EAEhC;EACAX,SAAS,CAAC,MAAM;IACd,MAAMY,YAAY,GAAGA,CAAA,KAAM;MACzB,MAAMC,cAAc,GAAGH,MAAM,CAACC,OAAO;MACrC,MAAMG,eAAe,GAAG,GAAG;;MAE3B;MACAR,YAAY,CAACO,cAAc,GAAGC,eAAe,CAAC;MAC9CN,gBAAgB,CAACK,cAAc,GAAGJ,WAAW,CAAC;MAE9CA,WAAW,GAAGI,cAAc;IAC9B,CAAC;IAEDH,MAAM,CAACK,gBAAgB,CAAC,QAAQ,EAAEH,YAAY,EAAE;MAAEI,OAAO,EAAE;IAAK,CAAC,CAAC;IAElE,OAAO,MAAM;MACXN,MAAM,CAACO,mBAAmB,CAAC,QAAQ,EAAEL,YAAY,CAAC;IACpD,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMM,WAAW,GAAGA,CAAA,KAAM;IACxBR,MAAM,CAACS,QAAQ,CAAC;MACdC,GAAG,EAAE,CAAC;MACNC,QAAQ,EAAE;IACZ,CAAC,CAAC;EACJ,CAAC;;EAED;EACA,MAAMC,aAAa,GAAG,qBACpBjB,SAAS,GAAG,aAAa,GAAG,aAAa,IACvCE,aAAa,GAAG,cAAc,GAAG,EAAE,EAAE;EAEzC,oBACEL,OAAA;IACEqB,SAAS,EAAED,aAAc;IACzBE,OAAO,EAAEN,WAAY;IACrB,cAAW;EAAe;IAAAO,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC3B,CAAC;AAEN,CAAC;AAACxB,EAAA,CA7CID,iBAAiB;AAAA0B,EAAA,GAAjB1B,iBAAiB;AA+CvB,eAAeA,iBAAiB;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}