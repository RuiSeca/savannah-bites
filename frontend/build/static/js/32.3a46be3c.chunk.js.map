{"version":3,"file":"static/js/32.3a46be3c.chunk.js","mappings":"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","sources":["components/ProgressStepsReservation/index.jsx","components/ReservationPage/index.jsx"],"sourcesContent":["import React from \"react\";\r\nimport \"./styles.css\";\r\n\r\nconst ProgressStepsReservation = ({ currentStep }) => {\r\n  return (\r\n    <div className=\"progress-steps-reservation\">\r\n      <div className=\"progress-step-wrapper-reservation\">\r\n        <div className=\"progress-step-container-reservation\">\r\n          <div\r\n            className={`progress-step-circle-reservation ${currentStep >= 1 ? \"active\" : \"\"}`}\r\n          >\r\n            1\r\n          </div>\r\n          <div\r\n            className={`progress-line-reservation ${currentStep >= 2 ? \"active\" : \"\"}`}\r\n          />\r\n        </div>\r\n        <span className=\"progress-step-label-reservation\">\r\n          Reservation Details\r\n        </span>\r\n      </div>\r\n\r\n      <div className=\"progress-step-wrapper-reservation\">\r\n        <div className=\"progress-step-container-reservation\">\r\n          <div\r\n            className={`progress-step-circle-reservation ${currentStep >= 2 ? \"active\" : \"\"}`}\r\n          >\r\n            2\r\n          </div>\r\n        </div>\r\n        <span className=\"progress-step-label-reservation\">Confirmation</span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProgressStepsReservation;\r\n","import React, { useState, useEffect, useCallback } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport \"./styles.css\";\r\nimport ProgressStepsReservation from \"../ProgressStepsReservation/index.jsx\";\r\n\r\n// API configuration\r\nconst apiUrl =\r\n  process.env.NODE_ENV === \"development\"\r\n    ? process.env.REACT_APP_NGROK_URL || process.env.REACT_APP_API_BASE_URL\r\n    : process.env.REACT_APP_API_BASE_URL;\r\n\r\nconst api = axios.create({\r\n  baseURL: apiUrl.endsWith(\"/api\") ? apiUrl : `${apiUrl}/api`,\r\n  withCredentials: true,\r\n  headers: { \"Content-Type\": \"application/json\" },\r\n});\r\n\r\n// Constants\r\nconst TIME_SLOTS = [\r\n  \"11:00 AM\",\r\n  \"1:00 PM\",\r\n  \"3:00 PM\",\r\n  \"5:00 PM\",\r\n  \"7:00 PM\",\r\n  \"9:00 PM\",\r\n];\r\n\r\nconst INITIAL_FORM_STATE = {\r\n  guests: \"\",\r\n  name: \"\",\r\n  email: \"\",\r\n  phone: \"\",\r\n  allergies: \"\",\r\n};\r\n\r\n// Date utility functions\r\nconst getTodayString = () => {\r\n  return new Date().toISOString().split(\"T\")[0];\r\n};\r\n\r\nconst ReservationPage = () => {\r\n  const navigate = useNavigate();\r\n  const today = getTodayString();\r\n\r\n  // State management\r\n  const [selectedDate, setSelectedDate] = useState(today);\r\n  const [selectedTime, setSelectedTime] = useState(\"\");\r\n  const [formData, setFormData] = useState(INITIAL_FORM_STATE);\r\n  const [availableTables, setAvailableTables] = useState({});\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(\"\");\r\n\r\n  // Set minimum date on date input\r\n  useEffect(() => {\r\n    const dateInput = document.getElementById(\"date\");\r\n    if (dateInput) dateInput.min = today;\r\n\r\n    return () => {\r\n      setAvailableTables({});\r\n      setError(\"\");\r\n    };\r\n  }, [today]);\r\n\r\n  // Fetch available tables\r\n  const fetchAvailableTables = useCallback(async () => {\r\n    if (!selectedDate) return;\r\n\r\n    const controller = new AbortController();\r\n    try {\r\n      setLoading(true);\r\n      setError(\"\");\r\n      const response = await api.get(\r\n        `/reservations/availability/${selectedDate}`,\r\n        {\r\n          signal: controller.signal,\r\n        }\r\n      );\r\n\r\n      if (response.data.status === \"success\" && response.data.availability) {\r\n        setAvailableTables(response.data.availability);\r\n      } else {\r\n        setAvailableTables(\r\n          TIME_SLOTS.reduce((acc, slot) => {\r\n            acc[slot] = 10; // Default availability\r\n            return acc;\r\n          }, {})\r\n        );\r\n      }\r\n    } catch (err) {\r\n      if (!axios.isCancel(err)) {\r\n        console.error(\"Error fetching availability:\", err);\r\n        setAvailableTables(\r\n          TIME_SLOTS.reduce((acc, slot) => {\r\n            acc[slot] = 10;\r\n            return acc;\r\n          }, {})\r\n        );\r\n        setError(\"Failed to fetch availability. Please try again.\");\r\n      }\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, [selectedDate]);\r\n\r\n  // Fetch available tables when date changes\r\n  useEffect(() => {\r\n    const timeoutId = selectedDate\r\n      ? setTimeout(fetchAvailableTables, 300)\r\n      : null;\r\n    return () => timeoutId && clearTimeout(timeoutId);\r\n  }, [selectedDate, fetchAvailableTables]);\r\n\r\n  // Form validation\r\n  const validateForm = () => {\r\n    if (!selectedDate) {\r\n      setError(\"Please select a date\");\r\n      return false;\r\n    }\r\n    if (!selectedTime) {\r\n      setError(\"Please select a time slot\");\r\n      return false;\r\n    }\r\n    if (!formData.name.trim()) {\r\n      setError(\"Please enter your name\");\r\n      return false;\r\n    }\r\n    if (!formData.email.trim()) {\r\n      setError(\"Please enter your email\");\r\n      return false;\r\n    }\r\n    if (!formData.phone.trim()) {\r\n      setError(\"Please enter your phone number\");\r\n      return false;\r\n    }\r\n    if (!formData.guests) {\r\n      setError(\"Please select number of guests\");\r\n      return false;\r\n    }\r\n    return true;\r\n  };\r\n\r\n  // Event handlers\r\n  const handleInputChange = (e) => {\r\n    const { id, value } = e.target;\r\n    setFormData((prev) => ({ ...prev, [id]: value }));\r\n    setError(\"\");\r\n  };\r\n\r\n  const handleTimeSlotClick = (time) => {\r\n    if (availableTables[time] > 0) {\r\n      setSelectedTime(time);\r\n      setError(\"\");\r\n    }\r\n  };\r\n\r\n  const handleDateChange = (e) => {\r\n    const selectedDate = new Date(e.target.value);\r\n    const today = new Date();\r\n\r\n    today.setHours(0, 0, 0, 0);\r\n    selectedDate.setHours(0, 0, 0, 0);\r\n\r\n    if (selectedDate >= today) {\r\n      setSelectedDate(e.target.value);\r\n      setSelectedTime(\"\"); // Reset time selection when date changes\r\n    } else {\r\n      alert(\"Please select a future date\");\r\n      setSelectedDate(today);\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!validateForm()) return;\r\n\r\n    try {\r\n      setLoading(true);\r\n      setError(\"\");\r\n      const reservationData = {\r\n        ...formData,\r\n        date: selectedDate,\r\n        time: selectedTime,\r\n      };\r\n\r\n      const response = await api.post(\"/reservations\", reservationData);\r\n      if (response.data.status === \"success\" && response.data.data) {\r\n        navigate(\"/reservation-confirmation\", {\r\n          state: {\r\n            reservationId: response.data.data.reservationId,\r\n            reservation: {\r\n              ...reservationData,\r\n              id: response.data.data.reservationId,\r\n              status: response.data.data.status,\r\n            },\r\n          },\r\n        });\r\n      } else {\r\n        throw new Error(\r\n          response.data.message || \"Failed to create reservation\"\r\n        );\r\n      }\r\n    } catch (err) {\r\n      console.error(\"Submission error:\", err);\r\n      setError(\r\n        err.response?.data?.message ||\r\n          err.response?.data?.errors?.join(\", \") ||\r\n          \"Failed to submit reservation. Please try again.\"\r\n      );\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"reservation-page-wrapper\">\r\n      <div className=\"reservation-page\">\r\n        <header className=\"reservation-header\">\r\n          <div className=\"header-content\">\r\n            <h1>Make a Reservation</h1>\r\n            <p className=\"tagline\">Book Your Table at Savannah Bites</p>\r\n          </div>\r\n        </header>\r\n\r\n        <main className=\"reservation-main\">\r\n          <div className=\"reservation-content\">\r\n            <ProgressStepsReservation currentStep={1} />\r\n\r\n            {error && (\r\n              <div className=\"error-message\" role=\"alert\">\r\n                {error}\r\n              </div>\r\n            )}\r\n\r\n            <div className=\"reservation-form-container\">\r\n              <form onSubmit={handleSubmit} noValidate>\r\n                <div className=\"form-section\">\r\n                  <h2>Choose Your Date & Time</h2>\r\n                  <div className=\"form-grid\">\r\n                    <div className=\"form-group\">\r\n                      <label htmlFor=\"date\">Select Date:</label>\r\n                      <input\r\n                        type=\"date\"\r\n                        id=\"date\"\r\n                        required\r\n                        min={today}\r\n                        value={selectedDate}\r\n                        onChange={handleDateChange}\r\n                      />\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                      <label>Available Time Slots:</label>\r\n                      <div className=\"time-slots\">\r\n                        {TIME_SLOTS.map((time) => (\r\n                          <div\r\n                            key={time}\r\n                            className={`time-slot ${\r\n                              selectedTime === time ? \"selected\" : \"\"\r\n                            } ${availableTables[time] === 0 ? \"full\" : \"\"}`}\r\n                            onClick={() => handleTimeSlotClick(time)}\r\n                            role=\"button\"\r\n                            tabIndex={0}\r\n                            onKeyPress={(e) => {\r\n                              if (e.key === \"Enter\" || e.key === \" \") {\r\n                                handleTimeSlotClick(time);\r\n                              }\r\n                            }}\r\n                            aria-label={`Select ${time}`}\r\n                            aria-disabled={availableTables[time] === 0}\r\n                          >\r\n                            <span className=\"time\">{time}</span>\r\n                            <span className=\"tables-left\">\r\n                              {availableTables[time] || 0} tables available\r\n                            </span>\r\n                          </div>\r\n                        ))}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"form-section\">\r\n                  <h2>Guest Information</h2>\r\n                  <div className=\"form-grid\">\r\n                    <div className=\"form-group\">\r\n                      <label htmlFor=\"guests\">Number of Guests:</label>\r\n                      <select\r\n                        id=\"guests\"\r\n                        required\r\n                        value={formData.guests}\r\n                        onChange={handleInputChange}\r\n                      >\r\n                        <option value=\"\">Select number of guests</option>\r\n                        {[1, 2, 3, 4, 5, 6].map((num) => (\r\n                          <option key={num} value={num}>\r\n                            {num} {num === 1 ? \"person\" : \"people\"}\r\n                          </option>\r\n                        ))}\r\n                        <option value=\"7+\">\r\n                          7 or more (we'll contact you)\r\n                        </option>\r\n                      </select>\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                      <label htmlFor=\"name\">Full Name:</label>\r\n                      <input\r\n                        type=\"text\"\r\n                        id=\"name\"\r\n                        required\r\n                        value={formData.name}\r\n                        onChange={handleInputChange}\r\n                        placeholder=\"Enter your full name\"\r\n                      />\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                      <label htmlFor=\"email\">Email:</label>\r\n                      <input\r\n                        type=\"email\"\r\n                        id=\"email\"\r\n                        required\r\n                        value={formData.email}\r\n                        onChange={handleInputChange}\r\n                        placeholder=\"Enter your email address\"\r\n                      />\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                      <label htmlFor=\"phone\">Phone Number:</label>\r\n                      <input\r\n                        type=\"tel\"\r\n                        id=\"phone\"\r\n                        required\r\n                        value={formData.phone}\r\n                        onChange={handleInputChange}\r\n                        placeholder=\"Enter your phone number\"\r\n                      />\r\n                    </div>\r\n\r\n                    <div className=\"form-group full-width\">\r\n                      <label htmlFor=\"allergies\">Any Food Allergies?</label>\r\n                      <textarea\r\n                        id=\"allergies\"\r\n                        value={formData.allergies}\r\n                        onChange={handleInputChange}\r\n                        placeholder=\"List any allergies (optional)\"\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"form-actions\">\r\n                  <button\r\n                    type=\"submit\"\r\n                    className={`submit-button ${loading ? \"submitting\" : \"\"}`}\r\n                    disabled={loading}\r\n                  >\r\n                    {loading ? \"Processing...\" : \"Confirm Reservation\"}\r\n                  </button>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </main>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ReservationPage;\r\n"],"names":["_ref","currentStep","_jsxs","className","children","_jsx","apiUrl","process","api","axios","create","baseURL","endsWith","withCredentials","headers","TIME_SLOTS","INITIAL_FORM_STATE","guests","name","email","phone","allergies","ReservationPage","navigate","useNavigate","today","Date","toISOString","split","selectedDate","setSelectedDate","useState","selectedTime","setSelectedTime","formData","setFormData","availableTables","setAvailableTables","loading","setLoading","error","setError","useEffect","dateInput","document","getElementById","min","fetchAvailableTables","useCallback","async","controller","AbortController","response","get","signal","data","status","availability","reduce","acc","slot","err","isCancel","console","timeoutId","setTimeout","clearTimeout","handleInputChange","e","id","value","target","prev","handleTimeSlotClick","time","ProgressStepsReservation","role","onSubmit","preventDefault","trim","reservationData","date","post","Error","message","state","reservationId","reservation","_err$response","_err$response$data","_err$response2","_err$response2$data","_err$response2$data$e","errors","join","noValidate","htmlFor","type","required","onChange","setHours","alert","map","onClick","tabIndex","onKeyPress","key","num","placeholder","disabled"],"sourceRoot":""}