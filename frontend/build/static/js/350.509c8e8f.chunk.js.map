{"version":3,"file":"static/js/350.509c8e8f.chunk.js","mappings":"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","sources":["components/CheckoutPage/index.jsx","components/ProgressSteps/index.jsx"],"sourcesContent":["import React, { useState, useCallback, useMemo } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useCart } from \"../../context/CartContext\";\r\nimport ProgressSteps from \"../ProgressSteps/index.jsx\";\r\nimport \"./styles.css\";\r\n\r\n// Import images\r\nimport suyaSkewersImage from \"../../images/suya-skewers.png\";\r\nimport jollofRiceImage from \"../../images/jollof-rice.jpg\";\r\nimport malvaPuddingImage from \"../../images/malva-pudding.png\";\r\nimport moiMoiImage from \"../../images/moi-moi.jpg\";\r\nimport puffPuffImage from \"../../images/puff-puff.jpg\";\r\nimport egusiSoupImage from \"../../images/egusi-soup.jpg\";\r\nimport jamaicanPattiesImage from \"../../images/jamaican-patties.jpg\";\r\nimport caluluImage from \"../../images/calulu.jpg\";\r\nimport cachupaImage from \"../../images/cachupa.jpg\";\r\nimport chinChinImage from \"../../images/chin-chin.jpg\";\r\nimport bananaFlambeImage from \"../../images/banana-flambe.jpg\";\r\nimport randburgSunImage from \"../../images/randburg-sun.jpg\"; // Added for Randburg Sun\r\nimport waterImage from \"../../images/water.jpg\";\r\nimport cokeImage from \"../../images/coca-cola.jpg\";\r\nimport iceTeaImage from \"../../images/ice-tea.jpg\";\r\nimport compalImage from \"../../images/compal.jpg\"; // Added for Compal\r\nimport strawberryShakeImage from \"../../images/strawberry-milkshake.jpg\";\r\nimport chocolateShakeImage from \"../../images/chocolate-milkshake.jpg\";\r\nimport vanillaShakeImage from \"../../images/vanilla-milkshake.jpg\";\r\nimport oreoShakeImage from \"../../images/oreo-milkshake.jpg\"; // Added for Oreo Milkshake\r\nimport summersBeerImage from \"../../images/apple-somersby.jpg\";\r\nimport superBockImage from \"../../images/super-bock.jpg\";\r\nimport stellaImage from \"../../images/stella-artois.jpg\";\r\nimport cucaImage from \"../../images/cuca.jpg\"; // Added for Cuca\r\n\r\n// Image mapping\r\nconst images = {\r\n  \"suya-skewers.png\": suyaSkewersImage,\r\n  \"jollof-rice.jpg\": jollofRiceImage,\r\n  \"malva-pudding.png\": malvaPuddingImage,\r\n  \"moi-moi.jpg\": moiMoiImage,\r\n  \"puff-puff.jpg\": puffPuffImage,\r\n  \"jamaican-patties.jpg\": jamaicanPattiesImage,\r\n  \"egusi-soup.jpg\": egusiSoupImage,\r\n  \"calulu.jpg\": caluluImage,\r\n  \"cachupa.jpg\": cachupaImage,\r\n  \"chin-chin.jpg\": chinChinImage,\r\n  \"banana-flambe.jpg\": bananaFlambeImage,\r\n  \"randburg-sun.jpg\": randburgSunImage,\r\n  \"water.jpg\": waterImage,\r\n  \"coca-cola.jpg\": cokeImage,\r\n  \"ice-tea.jpg\": iceTeaImage,\r\n  \"compal.jpg\": compalImage,\r\n  \"strawberry-milkshake.jpg\": strawberryShakeImage,\r\n  \"chocolate-milkshake.jpg\": chocolateShakeImage,\r\n  \"vanilla-milkshake.jpg\": vanillaShakeImage,\r\n  \"oreo-milkshake.jpg\": oreoShakeImage,\r\n  \"apple-somersby.jpg\": summersBeerImage,\r\n  \"super-bock.jpg\": superBockImage,\r\n  \"stella-artois.jpg\": stellaImage,\r\n  \"cuca.jpg\": cucaImage,\r\n};\r\n\r\nconst getImage = (filename) =>\r\n  images[filename] || \"https://via.placeholder.com/150\";\r\n\r\nconst DELIVERY_FEE = 2.5;\r\nconst MINIMUM_ORDER_AMOUNT = 10.0;\r\nconst MAX_ITEMS_PER_ORDER = 20;\r\n\r\nconst DELIVERY_SLOTS = [\r\n  \"10:00 AM - 12:00 PM\",\r\n  \"12:00 PM - 2:00 PM\",\r\n  \"2:00 PM - 4:00 PM\",\r\n  \"4:00 PM - 6:00 PM\",\r\n  \"6:00 PM - 8:00 PM\",\r\n];\r\n\r\nconst initialFormData = {\r\n  name: \"\",\r\n  email: \"\",\r\n  phone: \"\",\r\n  street: \"\",\r\n  city: \"\",\r\n  postcode: \"\",\r\n  deliveryTime: \"\",\r\n  specialInstructions: \"\",\r\n};\r\n\r\nconst validateUKPostcode = (postcode) => {\r\n  const postcodeRegex = /^[A-Z]{1,2}[0-9][A-Z0-9]? ?[0-9][A-Z]{2}$/i;\r\n  return postcodeRegex.test(postcode.trim());\r\n};\r\n\r\nconst validateEmail = (email) => {\r\n  const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n  return emailRegex.test(email);\r\n};\r\n\r\nconst validatePhone = (phone) => {\r\n  const phoneRegex = /^[\\d\\s]{11,14}$/;\r\n  return phoneRegex.test(phone);\r\n};\r\n\r\nfunction CheckoutPage() {\r\n  const { cart, removeFromCart, updateQuantity } = useCart();\r\n  const navigate = useNavigate();\r\n\r\n  const [formData, setFormData] = useState(initialFormData);\r\n  const [errors, setErrors] = useState({});\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n\r\n  // Format phone number as user types\r\n  const formatPhoneNumber = useCallback((value) => {\r\n    const phoneNumber = value.replace(/\\D/g, \"\");\r\n    if (phoneNumber.length <= 3) return phoneNumber;\r\n    if (phoneNumber.length <= 7)\r\n      return `${phoneNumber.slice(0, 3)} ${phoneNumber.slice(3)}`;\r\n    return `${phoneNumber.slice(0, 3)} ${phoneNumber.slice(3, 7)} ${phoneNumber.slice(7, 11)}`;\r\n  }, []);\r\n\r\n  // Handle all input changes\r\n  const handleInputChange = useCallback(\r\n    (e) => {\r\n      const { id, value } = e.target;\r\n\r\n      setFormData((prev) => ({\r\n        ...prev,\r\n        [id]: id === \"phone\" ? formatPhoneNumber(value) : value,\r\n      }));\r\n\r\n      // Clear errors for the changed field\r\n      setErrors((prev) => ({\r\n        ...prev,\r\n        [id]: \"\",\r\n        general: \"\",\r\n      }));\r\n    },\r\n    [formatPhoneNumber]\r\n  );\r\n\r\n  // Calculate cart totals\r\n  const { subtotal, totalPrice } = useMemo(() => {\r\n    const subtotal = cart.reduce((total, item) => {\r\n      const price = item.selectedPrice || item.price;\r\n      return total + price * item.quantity;\r\n    }, 0);\r\n\r\n    return {\r\n      subtotal,\r\n      totalPrice: subtotal + DELIVERY_FEE,\r\n    };\r\n  }, [cart]);\r\n\r\n  // Quantity handlers\r\n  const handleQuantityChange = useCallback(\r\n    (itemId, newQuantity, size) => {\r\n      if (newQuantity >= 1) {\r\n        updateQuantity(itemId, newQuantity, size);\r\n      }\r\n    },\r\n    [updateQuantity]\r\n  );\r\n\r\n  // Validate form data\r\n  const validateForm = useCallback(() => {\r\n    const newErrors = {};\r\n\r\n    // Name validation\r\n    if (!formData.name.trim()) {\r\n      newErrors.name = \"Name is required\";\r\n    }\r\n\r\n    // Email validation\r\n    if (!formData.email) {\r\n      newErrors.email = \"Email is required\";\r\n    } else if (!validateEmail(formData.email)) {\r\n      newErrors.email = \"Please enter a valid email address\";\r\n    }\r\n\r\n    // Phone validation\r\n    if (!formData.phone) {\r\n      newErrors.phone = \"Phone number is required\";\r\n    } else if (!validatePhone(formData.phone)) {\r\n      newErrors.phone = \"Please enter a valid UK phone number\";\r\n    }\r\n\r\n    // Address validation\r\n    if (!formData.street.trim()) {\r\n      newErrors.street = \"Street address is required\";\r\n    }\r\n\r\n    if (!formData.city.trim()) {\r\n      newErrors.city = \"City is required\";\r\n    }\r\n\r\n    if (!formData.postcode.trim()) {\r\n      newErrors.postcode = \"Postcode is required\";\r\n    } else if (!validateUKPostcode(formData.postcode)) {\r\n      newErrors.postcode = \"Please enter a valid UK postcode\";\r\n    }\r\n\r\n    // Delivery time validation\r\n    if (!formData.deliveryTime) {\r\n      newErrors.deliveryTime = \"Please select a delivery time\";\r\n    }\r\n\r\n    // Order amount validation\r\n    if (subtotal < MINIMUM_ORDER_AMOUNT) {\r\n      newErrors.general = `Minimum order amount is £${MINIMUM_ORDER_AMOUNT.toFixed(2)}`;\r\n    }\r\n\r\n    const totalItems = cart.reduce((sum, item) => sum + item.quantity, 0);\r\n    if (totalItems > MAX_ITEMS_PER_ORDER) {\r\n      newErrors.general = `Maximum ${MAX_ITEMS_PER_ORDER} items allowed per order`;\r\n    }\r\n\r\n    setErrors(newErrors);\r\n    return Object.keys(newErrors).length === 0;\r\n  }, [formData, subtotal, cart]);\r\n\r\n  // Handle form submission\r\n  const handleSubmit = useCallback(\r\n    async (e) => {\r\n      e.preventDefault();\r\n\r\n      if (!validateForm()) {\r\n        return;\r\n      }\r\n\r\n      if (cart.length === 0) {\r\n        setErrors({ general: \"Your cart is empty\" });\r\n        return;\r\n      }\r\n\r\n      try {\r\n        setIsSubmitting(true);\r\n\r\n        navigate(\"/payment\", {\r\n          state: {\r\n            orderDetails: {\r\n              items: cart.map((item) => ({\r\n                id: item.id,\r\n                name: item.name,\r\n                quantity: item.quantity,\r\n                price: item.selectedPrice || item.price,\r\n                size: item.size || \"regular\",\r\n              })),\r\n              customerInfo: {\r\n                name: formData.name,\r\n                email: formData.email,\r\n                phone: formData.phone,\r\n                address: formData.street,\r\n                city: formData.city,\r\n                postcode: formData.postcode.toUpperCase(),\r\n                deliveryTime: formData.deliveryTime,\r\n                specialInstructions: formData.specialInstructions,\r\n              },\r\n              subtotal,\r\n              deliveryFee: DELIVERY_FEE,\r\n              totalAmount: totalPrice,\r\n              orderDate: new Date().toISOString(),\r\n            },\r\n          },\r\n        });\r\n      } catch (error) {\r\n        console.error(\"Checkout error:\", error);\r\n        setErrors({\r\n          general:\r\n            \"There was an error processing your order. Please try again.\",\r\n        });\r\n      } finally {\r\n        setIsSubmitting(false);\r\n      }\r\n    },\r\n    [cart, formData, subtotal, totalPrice, navigate, validateForm]\r\n  );\r\n\r\n  // Empty cart view\r\n  if (cart.length === 0) {\r\n    return (\r\n      <div className=\"checkout-page\">\r\n        <div className=\"checkout-container\">\r\n          <h1 className=\"page-title\">Checkout</h1>\r\n          <div className=\"empty-cart\">\r\n            <p>Your cart is empty</p>\r\n            <button\r\n              className=\"primary-button\"\r\n              onClick={() => navigate(\"/menu\")}\r\n            >\r\n              Return to Menu\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // Main checkout view\r\n  return (\r\n    <div className=\"checkout-page\">\r\n      <div className=\"checkout-container\">\r\n        <ProgressSteps currentStep={1} />\r\n\r\n        {/* Header */}\r\n        <div className=\"checkout-header\">\r\n          <button className=\"back-button\" onClick={() => navigate(-1)}>\r\n            ← Back\r\n          </button>\r\n          <h1>Checkout</h1>\r\n        </div>\r\n\r\n        {/* Order Summary */}\r\n        <div className=\"order-summary\">\r\n          <h2>Order Summary</h2>\r\n          <ul className=\"cart-items\">\r\n            {cart.map((item) => (\r\n              <li\r\n                key={`${item.id}-${item.size || \"default\"}`}\r\n                className=\"cart-item\"\r\n              >\r\n                <div className=\"item-info\">\r\n                  <img\r\n                    src={getImage(item.image)}\r\n                    alt={item.name}\r\n                    className=\"checkout-item-image\"\r\n                  />\r\n                  <span className=\"item-name\">\r\n                    {item.name}\r\n                    {item.size && (\r\n                      <span className=\"item-size\">({item.size})</span>\r\n                    )}\r\n                  </span>\r\n                  <span className=\"item-price\">\r\n                    £{(item.selectedPrice || item.price).toFixed(2)}\r\n                  </span>\r\n                </div>\r\n\r\n                <div className=\"quantity-controls\">\r\n                  <button\r\n                    type=\"button\"\r\n                    onClick={() =>\r\n                      handleQuantityChange(\r\n                        item.id,\r\n                        item.quantity - 1,\r\n                        item.size\r\n                      )\r\n                    }\r\n                    className=\"quantity-btn\"\r\n                  >\r\n                    -\r\n                  </button>\r\n                  <span>{item.quantity}</span>\r\n                  <button\r\n                    type=\"button\"\r\n                    onClick={() =>\r\n                      handleQuantityChange(\r\n                        item.id,\r\n                        item.quantity + 1,\r\n                        item.size\r\n                      )\r\n                    }\r\n                    className=\"quantity-btn\"\r\n                  >\r\n                    +\r\n                  </button>\r\n                </div>\r\n\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={() => removeFromCart(item.id, item.size)}\r\n                  className=\"remove-btn\"\r\n                >\r\n                  Remove\r\n                </button>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n\r\n          <div className=\"price-summary\">\r\n            <div className=\"price-row\">\r\n              <span>Subtotal</span>\r\n              <span>£{subtotal.toFixed(2)}</span>\r\n            </div>\r\n            <div className=\"price-row\">\r\n              <span>Delivery Fee</span>\r\n              <span>£{DELIVERY_FEE.toFixed(2)}</span>\r\n            </div>\r\n            <div className=\"price-row total\">\r\n              <span>Total</span>\r\n              <span>£{totalPrice.toFixed(2)}</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Delivery Details Form */}\r\n        <form onSubmit={handleSubmit} className=\"delivery-form\">\r\n          <h2>Delivery Details</h2>\r\n\r\n          <div className=\"form-section\">\r\n            <h3>Contact Information</h3>\r\n            <div className=\"form-grid\">\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"name\">Full Name *</label>\r\n                <input\r\n                  type=\"text\"\r\n                  id=\"name\"\r\n                  value={formData.name}\r\n                  onChange={handleInputChange}\r\n                  placeholder=\"Enter your full name\"\r\n                  className={errors.name ? \"error\" : \"\"}\r\n                />\r\n                {errors.name && (\r\n                  <span className=\"error-text\">{errors.name}</span>\r\n                )}\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"email\">Email Address *</label>\r\n                <input\r\n                  type=\"email\"\r\n                  id=\"email\"\r\n                  value={formData.email}\r\n                  onChange={handleInputChange}\r\n                  placeholder=\"Enter your email\"\r\n                  className={errors.email ? \"error\" : \"\"}\r\n                />\r\n                {errors.email && (\r\n                  <span className=\"error-text\">{errors.email}</span>\r\n                )}\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"phone\">Phone Number *</label>\r\n                <input\r\n                  type=\"tel\"\r\n                  id=\"phone\"\r\n                  value={formData.phone}\r\n                  onChange={handleInputChange}\r\n                  placeholder=\"Enter your phone number\"\r\n                  className={errors.phone ? \"error\" : \"\"}\r\n                />\r\n                {errors.phone && (\r\n                  <span className=\"error-text\">{errors.phone}</span>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"form-section\">\r\n            <h3>Delivery Address</h3>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"street\">Street Address *</label>\r\n              <textarea\r\n                id=\"street\"\r\n                value={formData.street}\r\n                onChange={handleInputChange}\r\n                placeholder=\"Enter your street address\"\r\n                rows=\"2\"\r\n                className={errors.street ? \"error\" : \"\"}\r\n              />\r\n              {errors.street && (\r\n                <span className=\"error-text\">{errors.street}</span>\r\n              )}\r\n            </div>\r\n\r\n            <div className=\"address-grid\">\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"city\">City *</label>\r\n                <input\r\n                  type=\"text\"\r\n                  id=\"city\"\r\n                  value={formData.city}\r\n                  onChange={handleInputChange}\r\n                  placeholder=\"Enter city\"\r\n                  className={errors.city ? \"error\" : \"\"}\r\n                />\r\n                {errors.city && (\r\n                  <span className=\"error-text\">{errors.city}</span>\r\n                )}\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"postcode\">Postcode *</label>\r\n                <input\r\n                  type=\"text\"\r\n                  id=\"postcode\"\r\n                  value={formData.postcode}\r\n                  onChange={handleInputChange}\r\n                  placeholder=\"Enter postcode\"\r\n                  className={errors.postcode ? \"error\" : \"\"}\r\n                />\r\n                {errors.postcode && (\r\n                  <span className=\"error-text\">{errors.postcode}</span>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"form-section\">\r\n            <h2 className=\"summary-title\">Delivery Options</h2>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"deliveryTime\">Preferred Delivery Time *</label>\r\n              <select\r\n                id=\"deliveryTime\"\r\n                value={formData.deliveryTime}\r\n                onChange={handleInputChange}\r\n                className={errors.deliveryTime ? \"error\" : \"\"}\r\n              >\r\n                <option value=\"\">Select delivery time</option>\r\n                {DELIVERY_SLOTS.map((slot) => (\r\n                  <option key={slot} value={slot}>\r\n                    {slot}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n              {errors.deliveryTime && (\r\n                <span className=\"error-message\">{errors.deliveryTime}</span>\r\n              )}\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"specialInstructions\">\r\n                Special Instructions (Optional)\r\n              </label>\r\n              <textarea\r\n                id=\"specialInstructions\"\r\n                value={formData.specialInstructions}\r\n                onChange={handleInputChange}\r\n                placeholder=\"Add any special delivery instructions...\"\r\n                rows=\"3\"\r\n                className=\"special-instructions\"\r\n              />\r\n            </div>\r\n\r\n            {/* Price Summary */}\r\n            <div className=\"price-summary\">\r\n              <div className=\"price-row\">\r\n                <span>Subtotal:</span>\r\n                <span>£{subtotal.toFixed(2)}</span>\r\n              </div>\r\n              <div className=\"price-row\">\r\n                <span>Delivery Fee:</span>\r\n                <span>£{DELIVERY_FEE.toFixed(2)}</span>\r\n              </div>\r\n              <div className=\"price-row total\">\r\n                <span>Total Amount:</span>\r\n                <span>£{totalPrice.toFixed(2)}</span>\r\n              </div>\r\n            </div>\r\n\r\n            {/* Minimum Order Notice */}\r\n            <div className=\"order-notice\">\r\n              <p>* Minimum order: £{MINIMUM_ORDER_AMOUNT.toFixed(2)}</p>\r\n              <p>* Maximum {MAX_ITEMS_PER_ORDER} items per order</p>\r\n            </div>\r\n\r\n            {/* Error Message */}\r\n            {errors.general && (\r\n              <div className=\"error-message general\">{errors.general}</div>\r\n            )}\r\n\r\n            {/* Submit Button */}\r\n            <button\r\n              type=\"submit\"\r\n              className=\"submit-button\"\r\n              disabled={isSubmitting}\r\n            >\r\n              {isSubmitting ? (\r\n                <span>Processing...</span>\r\n              ) : (\r\n                <span>Proceed to Payment • £{totalPrice.toFixed(2)}</span>\r\n              )}\r\n            </button>\r\n          </div>\r\n\r\n          {/* Terms and Privacy */}\r\n          <div className=\"terms-section\">\r\n            <p>\r\n              By proceeding, you agree to our{\" \"}\r\n              <a href=\"/terms\" className=\"link\">\r\n                Terms & Conditions\r\n              </a>{\" \"}\r\n              and{\" \"}\r\n              <a href=\"/privacy\" className=\"link\">\r\n                Privacy Policy\r\n              </a>\r\n            </p>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CheckoutPage;\r\n","import React from 'react';\r\nimport './styles.css';\r\n\r\nconst ProgressSteps = ({ currentStep }) => {\r\n  return (\r\n    <div className=\"progress-steps\">\r\n      <div className=\"progress-step-wrapper\">\r\n        <div className=\"progress-step-container\">\r\n          <div className={`progress-step-circle ${currentStep >= 1 ? 'active' : ''}`}>\r\n            1\r\n          </div>\r\n          <div className={`progress-line ${currentStep >= 2 ? 'active' : ''}`} />\r\n        </div>\r\n        <span className=\"progress-step-label\">Order Details</span>\r\n      </div>\r\n\r\n      <div className=\"progress-step-wrapper\">\r\n        <div className=\"progress-step-container\">\r\n          <div className={`progress-step-circle ${currentStep >= 2 ? 'active' : ''}`}>\r\n            2\r\n          </div>\r\n          <div className={`progress-line ${currentStep >= 3 ? 'active' : ''}`} />\r\n        </div>\r\n        <span className=\"progress-step-label\">Payment</span>\r\n      </div>\r\n\r\n      <div className=\"progress-step-wrapper\">\r\n        <div className=\"progress-step-container\">\r\n          <div className={`progress-step-circle ${currentStep >= 3 ? 'active' : ''}`}>\r\n            3\r\n          </div>\r\n        </div>\r\n        <span className=\"progress-step-label\">Confirmation</span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProgressSteps;\r\n\r\n\r\n\r\n"],"names":["images","suyaSkewersImage","jollofRiceImage","malvaPuddingImage","moiMoiImage","puffPuffImage","jamaicanPattiesImage","egusiSoupImage","caluluImage","cachupaImage","chinChinImage","bananaFlambeImage","randburgSunImage","waterImage","cokeImage","iceTeaImage","compalImage","strawberryShakeImage","chocolateShakeImage","vanillaShakeImage","oreoShakeImage","summersBeerImage","superBockImage","stellaImage","cucaImage","DELIVERY_FEE","DELIVERY_SLOTS","initialFormData","name","email","phone","street","city","postcode","deliveryTime","specialInstructions","cart","removeFromCart","updateQuantity","useCart","navigate","useNavigate","formData","setFormData","useState","errors","setErrors","isSubmitting","setIsSubmitting","formatPhoneNumber","useCallback","value","phoneNumber","replace","length","slice","handleInputChange","e","id","target","prev","general","subtotal","totalPrice","useMemo","reduce","total","item","selectedPrice","price","quantity","handleQuantityChange","itemId","newQuantity","size","validateForm","newErrors","trim","test","toFixed","sum","Object","keys","handleSubmit","async","preventDefault","state","orderDetails","items","map","customerInfo","address","toUpperCase","deliveryFee","totalAmount","orderDate","Date","toISOString","error","console","_jsx","className","children","_jsxs","onClick","ProgressSteps","currentStep","src","filename","image","alt","type","onSubmit","htmlFor","onChange","placeholder","rows","slot","disabled","href","_ref"],"sourceRoot":""}