{"version":3,"file":"static/js/126.7571807f.chunk.js","mappings":"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","sources":["components/CookingPotBasket/index.jsx","components/Navigation/index.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport { useCart } from \"../../context/CartContext\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./styles.css\";\r\n\r\nfunction CookingPotBasket({ onClick }) {\r\n  const { cart } = useCart();\r\n  const itemCount = cart.reduce((total, item) => total + item.quantity, 0);\r\n  const [isActive, setIsActive] = useState(false);\r\n  const [showSuccess, setShowSuccess] = useState(false);\r\n  const prevCountRef = useRef(itemCount);\r\n  const timeoutRef = useRef(null);\r\n  const successTimeoutRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    if (itemCount > prevCountRef.current) {\r\n      // Clear any existing timeouts\r\n      if (timeoutRef.current) {\r\n        clearTimeout(timeoutRef.current);\r\n      }\r\n      if (successTimeoutRef.current) {\r\n        clearTimeout(successTimeoutRef.current);\r\n      }\r\n\r\n      // Reset states to ensure animation plays\r\n      setIsActive(false);\r\n      setShowSuccess(false);\r\n\r\n      // Small delay to ensure reset takes effect\r\n      requestAnimationFrame(() => {\r\n        setIsActive(true);\r\n\r\n        timeoutRef.current = setTimeout(() => {\r\n          setShowSuccess(true);\r\n\r\n          successTimeoutRef.current = setTimeout(() => {\r\n            setShowSuccess(false);\r\n            setIsActive(false);\r\n          }, 1500); // Shorter duration for reset\r\n        }, 1000);\r\n      });\r\n    }\r\n    prevCountRef.current = itemCount;\r\n\r\n    // Cleanup timeouts\r\n    return () => {\r\n      if (timeoutRef.current) clearTimeout(timeoutRef.current);\r\n      if (successTimeoutRef.current) clearTimeout(successTimeoutRef.current);\r\n    };\r\n  }, [itemCount]);\r\n\r\n  const handleClick = (e) => {\r\n    onClick(e);\r\n  };\r\n\r\n  return (\r\n    <button\r\n      className={`cooking-pot-basket ${isActive ? \"active\" : \"\"} ${showSuccess ? \"success\" : \"\"}`}\r\n      onClick={handleClick}\r\n      aria-label={`Shopping cart with ${itemCount} items`}\r\n    >\r\n      <div className=\"liquid\" />\r\n      <div className=\"success-bg\" />\r\n\r\n      <svg\r\n        className=\"steam\"\r\n        viewBox=\"0 0 24 24\"\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n      >\r\n        <path d=\"M12,2A10,10 0 0,1 22,12A10,10 0 0,1 12,22A10,10 0 0,1 2,12A10,10 0 0,1 12,2Z\" />\r\n      </svg>\r\n\r\n      <svg\r\n        className=\"splash\"\r\n        viewBox=\"0 0 24 24\"\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n      >\r\n        <circle\r\n          cx=\"12\"\r\n          cy=\"12\"\r\n          r=\"10\"\r\n          fill=\"none\"\r\n          stroke=\"#ff9d6c\"\r\n          strokeWidth=\"2\"\r\n        />\r\n      </svg>\r\n\r\n      <div className=\"btn-content\">\r\n        <svg\r\n          className=\"pot\"\r\n          viewBox=\"0 0 24 24\"\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n        >\r\n          <path d=\"M19,14V17A5,5,0,0,1,14,22H10A5,5,0,0,1,5,17V14H2V12H22V14ZM3,4A1,1,0,0,1,4,3H6A1,1,0,0,1,6,5H4A1,1,0,0,1,3,4ZM8,4A1,1,0,0,1,9,3h2a1,1,0,0,1,0,2H9A1,1,0,0,1,8,4ZM13,4a1,1,0,0,1,1-1h2a1,1,0,0,1,0,2H14A1,1,0,0,1,13,4ZM7,8H17l1.5,4H5.5Z\" />\r\n        </svg>\r\n        {itemCount > 0 && <span className=\"item-count\">{itemCount}</span>}\r\n      </div>\r\n\r\n      <div className=\"success-message\">\r\n        <svg\r\n          className=\"success-tick\"\r\n          viewBox=\"0 0 24 24\"\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n        >\r\n          <path d=\"M9 16.2L4.8 12l-1.4 1.4L9 19 21 7l-1.4-1.4L9 16.2z\" />\r\n        </svg>\r\n      </div>\r\n\r\n      <svg\r\n        className=\"ingredient\"\r\n        viewBox=\"0 0 512 512\"\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n      >\r\n        <path d=\"M298.2 156.6C245.5 130.9 183.7 146.1 147.1 189.4l55.27 55.31c6.25 6.25 6.25 16.33 0 22.58c-3.127 3-7.266 4.605-11.39 4.605s-8.068-1.605-11.19-4.605L124.7 211.2C81.33 247.8 66.16 309.6 91.88 362.2c13.61 27.72 36.09 50.25 63.81 63.86c52.65 25.72 114.4 10.55 151.1-32.86L261.7 347.3c-6.25-6.25-6.25-16.38 0-22.63c6.25-6.25 16.38-6.25 22.63 0l55.15 55.15c43.28-36.65 58.45-98.4 32.73-151.1C358.6 192.7 336.1 170.2 298.2 156.6z\" />\r\n      </svg>\r\n    </button>\r\n  );\r\n}\r\n\r\nCookingPotBasket.propTypes = {\r\n  onClick: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default CookingPotBasket;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link, useLocation, useNavigate } from \"react-router-dom\";\r\nimport CookingPotBasket from \"../CookingPotBasket\";\r\nimport \"./styles.css\";\r\n\r\nconst Navigation = () => {\r\n  const [isMobileMenuOpen, setIsMobileMenuOpen] = useState(false);\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n\r\n  // Reset scroll when location changes\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n    setIsMobileMenuOpen(false);\r\n  }, [location]);\r\n\r\n  const handleCartClick = () => {\r\n    navigate(\"/checkout\");\r\n  };\r\n\r\n  // Custom link component that scrolls to top\r\n  const ScrollToTopLink = ({ to, children, onClick }) => {\r\n    const handleClick = (e) => {\r\n      if (onClick) onClick(e);\r\n      window.scrollTo(0, 0);\r\n    };\r\n\r\n    return (\r\n      <Link to={to} onClick={handleClick}>\r\n        {children}\r\n      </Link>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <nav className=\"navigation\">\r\n      {/* Desktop Menu */}\r\n      <ul className=\"desktop-menu\">\r\n        <li>\r\n          <ScrollToTopLink to=\"/\">Home</ScrollToTopLink>\r\n        </li>\r\n        <li>\r\n          <ScrollToTopLink to=\"/menu\">Menu</ScrollToTopLink>\r\n        </li>\r\n        <li>\r\n          <ScrollToTopLink to=\"/Reservation\">Book A Table</ScrollToTopLink>\r\n        </li>\r\n        <li>\r\n          <ScrollToTopLink to=\"/about\">About Us</ScrollToTopLink>\r\n        </li>\r\n        <li>\r\n          <ScrollToTopLink to=\"/contact\">Contact</ScrollToTopLink>\r\n        </li>\r\n        <li className=\"cart-button-container\">\r\n          <CookingPotBasket onClick={handleCartClick} />\r\n        </li>\r\n      </ul>\r\n\r\n      {/* Mobile Menu Button */}\r\n      <button\r\n        className=\"mobile-menu-btn\"\r\n        onClick={() => setIsMobileMenuOpen(true)}\r\n        aria-label=\"Open menu\"\r\n      >\r\n        <svg\r\n          viewBox=\"0 0 24 24\"\r\n          fill=\"none\"\r\n          stroke=\"currentColor\"\r\n          strokeWidth=\"2\"\r\n          strokeLinecap=\"round\"\r\n          strokeLinejoin=\"round\"\r\n        >\r\n          <line x1=\"3\" y1=\"12\" x2=\"21\" y2=\"12\"></line>\r\n          <line x1=\"3\" y1=\"6\" x2=\"21\" y2=\"6\"></line>\r\n          <line x1=\"3\" y1=\"18\" x2=\"21\" y2=\"18\"></line>\r\n        </svg>\r\n      </button>\r\n\r\n      <div className=\"mobile-cart-button\">\r\n        <CookingPotBasket onClick={handleCartClick} />\r\n      </div>\r\n\r\n      {/* Mobile Menu */}\r\n      <div className={`mobile-nav ${isMobileMenuOpen ? \"active\" : \"\"}`}>\r\n        <button\r\n          className=\"close-menu\"\r\n          onClick={() => setIsMobileMenuOpen(false)}\r\n          aria-label=\"Close menu\"\r\n        >\r\n          ×\r\n        </button>\r\n        <ul className=\"mobile-menu\">\r\n          <li>\r\n            <ScrollToTopLink to=\"/\" onClick={() => setIsMobileMenuOpen(false)}>\r\n              Home\r\n            </ScrollToTopLink>\r\n          </li>\r\n          <li>\r\n            <ScrollToTopLink\r\n              to=\"/menu\"\r\n              onClick={() => setIsMobileMenuOpen(false)}\r\n            >\r\n              Menu\r\n            </ScrollToTopLink>\r\n          </li>\r\n          <li>\r\n            <ScrollToTopLink\r\n              to=\"/Reservation\"\r\n              onClick={() => setIsMobileMenuOpen(false)}\r\n            >\r\n              Book A Table\r\n            </ScrollToTopLink>\r\n          </li>\r\n          <li>\r\n            <ScrollToTopLink\r\n              to=\"/about\"\r\n              onClick={() => setIsMobileMenuOpen(false)}\r\n            >\r\n              About Us\r\n            </ScrollToTopLink>\r\n          </li>\r\n          <li>\r\n            <ScrollToTopLink\r\n              to=\"/contact\"\r\n              onClick={() => setIsMobileMenuOpen(false)}\r\n            >\r\n              Contact\r\n            </ScrollToTopLink>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n\r\n      {/* Overlay */}\r\n      {isMobileMenuOpen && (\r\n        <div\r\n          className=\"overlay active\"\r\n          onClick={() => setIsMobileMenuOpen(false)}\r\n        />\r\n      )}\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navigation;\r\n"],"names":["_ref","onClick","cart","useCart","itemCount","reduce","total","item","quantity","isActive","setIsActive","useState","showSuccess","setShowSuccess","prevCountRef","useRef","timeoutRef","successTimeoutRef","useEffect","current","clearTimeout","requestAnimationFrame","setTimeout","_jsxs","className","e","children","_jsx","viewBox","xmlns","d","cx","cy","r","fill","stroke","strokeWidth","Navigation","isMobileMenuOpen","setIsMobileMenuOpen","location","useLocation","navigate","useNavigate","window","scrollTo","handleCartClick","ScrollToTopLink","to","Link","CookingPotBasket","strokeLinecap","strokeLinejoin","x1","y1","x2","y2"],"sourceRoot":""}