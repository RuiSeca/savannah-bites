{"version":3,"file":"static/js/20.5788d353.chunk.js","mappings":"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","sources":["components/PaymentPage/index.jsx","components/ProgressSteps/index.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Elements } from \"@stripe/react-stripe-js\";\r\nimport {\r\n  PaymentElement,\r\n  useStripe,\r\n  useElements,\r\n} from \"@stripe/react-stripe-js\";\r\nimport { loadStripe } from \"@stripe/stripe-js\";\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport { useCart } from \"../../context/CartContext\";\r\nimport ProgressSteps from \"../ProgressSteps/index.jsx\";\r\nimport \"./styles.css\";\r\n\r\n// Stripe initialization\r\nconst stripePromise = loadStripe(process.env.REACT_APP_STRIPE_PUBLISHABLE_KEY);\r\n\r\n// API configuration\r\nconst apiUrl =\r\n  process.env.NODE_ENV === \"development\"\r\n    ? process.env.REACT_APP_NGROK_URL || process.env.REACT_APP_API_BASE_URL\r\n    : process.env.REACT_APP_API_BASE_URL;\r\n\r\n// Create axios instance with proper URL construction\r\nconst api = axios.create({\r\n  baseURL: apiUrl.endsWith(\"/api\") ? apiUrl : `${apiUrl}/api`,\r\n  withCredentials: true,\r\n  headers: {\r\n    \"Content-Type\": \"application/json\",\r\n  },\r\n});\r\n\r\nconst DELIVERY_FEE = 2.5;\r\n\r\nfunction CheckoutForm() {\r\n  const stripe = useStripe();\r\n  const elements = useElements();\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n  const { cart, clearCart } = useCart();\r\n  const [isProcessing, setIsProcessing] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  const orderDetails = location.state?.orderDetails;\r\n\r\n  // Validate order details\r\n  useEffect(() => {\r\n    if (!orderDetails?.customerInfo || !cart.length) {\r\n      console.log(\r\n        \"Missing order details or empty cart, redirecting to checkout\"\r\n      );\r\n      navigate(\"/checkout\");\r\n    }\r\n  }, [orderDetails, cart, navigate]);\r\n\r\n  const calculateTotals = () => {\r\n    const subtotal = cart.reduce(\r\n      (sum, item) => sum + (item.selectedPrice || item.price) * item.quantity,\r\n      0\r\n    );\r\n    return {\r\n      subtotal,\r\n      deliveryFee: DELIVERY_FEE,\r\n      total: subtotal + DELIVERY_FEE,\r\n    };\r\n  };\r\n\r\n  const createOrder = async (paymentIntent) => {\r\n    try {\r\n      console.log(\"Creating order...\");\r\n      const { subtotal, deliveryFee, total } = calculateTotals();\r\n\r\n      const orderData = {\r\n        paymentIntentId: paymentIntent.id,\r\n        orderDetails: {\r\n          items: cart.map((item) => ({\r\n            id: item._id || item.id,\r\n            name: item.name,\r\n            quantity: item.quantity,\r\n            price: item.selectedPrice || item.price,\r\n            size: item.size || \"regular\",\r\n          })),\r\n          subtotal,\r\n          deliveryFee,\r\n          totalAmount: total,\r\n          customerInfo: orderDetails.customerInfo,\r\n        },\r\n      };\r\n\r\n      console.log(\"Sending order data:\", orderData);\r\n      const response = await api.post(\"/orders\", orderData);\r\n      console.log(\"Order created successfully:\", response.data);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error(\"Order creation failed:\", error);\r\n      console.error(\"Error details:\", {\r\n        message: error.message,\r\n        response: error.response?.data,\r\n        status: error.response?.status,\r\n      });\r\n      throw new Error(\r\n        \"Failed to create order: \" +\r\n          (error.response?.data?.message || error.message)\r\n      );\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    if (!stripe || !elements || isProcessing) {\r\n      return;\r\n    }\r\n\r\n    try {\r\n      setIsProcessing(true);\r\n      setError(null);\r\n\r\n      console.log(\"Submitting payment form...\");\r\n      const { error: submitError } = await elements.submit();\r\n      if (submitError) {\r\n        throw submitError;\r\n      }\r\n\r\n      console.log(\"Confirming payment...\");\r\n      const { error: paymentError, paymentIntent } =\r\n        await stripe.confirmPayment({\r\n          elements,\r\n          confirmParams: {\r\n            return_url: `${window.location.origin}/confirmation`,\r\n            payment_method_data: {\r\n              billing_details: {\r\n                name: orderDetails.customerInfo.name,\r\n                email: orderDetails.customerInfo.email,\r\n                phone: orderDetails.customerInfo.phone,\r\n                address: {\r\n                  line1: orderDetails.customerInfo.address,\r\n                  city: orderDetails.customerInfo.city,\r\n                  postal_code: orderDetails.customerInfo.postcode,\r\n                  country: \"GB\",\r\n                },\r\n              },\r\n            },\r\n          },\r\n          redirect: \"if_required\",\r\n        });\r\n\r\n      if (paymentError) {\r\n        console.error(\"Payment error:\", paymentError);\r\n        throw paymentError;\r\n      }\r\n\r\n      if (paymentIntent.status === \"succeeded\") {\r\n        console.log(\"Payment succeeded, creating order...\");\r\n        const { orderId } = await createOrder(paymentIntent);\r\n        clearCart();\r\n        navigate(\"/confirmation\", {\r\n          state: {\r\n            orderId,\r\n            status: \"success\",\r\n            paymentIntentId: paymentIntent.id,\r\n          },\r\n          replace: true,\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Payment/Order error:\", error);\r\n      setError(error.message);\r\n    } finally {\r\n      setIsProcessing(false);\r\n    }\r\n  };\r\n\r\n  const { subtotal, total } = calculateTotals();\r\n\r\n  return (\r\n    <div className=\"payment-container\">\r\n      <ProgressSteps currentStep={2} />\r\n\r\n      <div className=\"payment-header\">\r\n        <h1>Secure Payment</h1>\r\n        <div className=\"order-summary\">\r\n          <h2>Order Summary</h2>\r\n          <div className=\"items-list\">\r\n            {cart.map((item) => (\r\n              <div\r\n                key={`${item.id || item._id}-${item.size || \"regular\"}`}\r\n                className=\"order-item\"\r\n              >\r\n                <div className=\"item-info\">\r\n                  <span className=\"item-name\">{item.name}</span>\r\n                  {item.size && <span className=\"item-size\">{item.size}</span>}\r\n                </div>\r\n                <div className=\"item-price\">\r\n                  <span className=\"quantity\">x{item.quantity}</span>\r\n                  <span className=\"price\">\r\n                    £\r\n                    {(\r\n                      (item.selectedPrice || item.price) * item.quantity\r\n                    ).toFixed(2)}\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n\r\n          <div className=\"price-breakdown\">\r\n            <div className=\"price-row\">\r\n              <span>Subtotal</span>\r\n              <span>£{subtotal.toFixed(2)}</span>\r\n            </div>\r\n            <div className=\"price-row\">\r\n              <span>Delivery Fee</span>\r\n              <span>£{DELIVERY_FEE.toFixed(2)}</span>\r\n            </div>\r\n            <div className=\"price-row total\">\r\n              <span>Total to Pay</span>\r\n              <span>£{total.toFixed(2)}</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"delivery-info\">\r\n          <h3>Delivery Details</h3>\r\n          {orderDetails?.customerInfo &&\r\n            Object.entries(orderDetails.customerInfo).map(\r\n              ([key, value]) =>\r\n                key !== \"email\" &&\r\n                key !== \"specialInstructions\" && (\r\n                  <div key={key} className=\"info-row\">\r\n                    <span>\r\n                      {key.charAt(0).toUpperCase() +\r\n                        key.slice(1).replace(/([A-Z])/g, \" $1\")}\r\n                      :\r\n                    </span>\r\n                    <span>{value}</span>\r\n                  </div>\r\n                )\r\n            )}\r\n          {orderDetails?.customerInfo?.specialInstructions && (\r\n            <div className=\"special-instructions\">\r\n              <h4>Special Instructions:</h4>\r\n              <p>{orderDetails.customerInfo.specialInstructions}</p>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <form onSubmit={handleSubmit} className=\"payment-form\">\r\n        <div className=\"payment-element-container\">\r\n          <PaymentElement />\r\n        </div>\r\n\r\n        {error && (\r\n          <div className=\"error-message\" role=\"alert\">\r\n            {error}\r\n          </div>\r\n        )}\r\n\r\n        <button\r\n          type=\"submit\"\r\n          className=\"payment-button\"\r\n          disabled={!stripe || isProcessing}\r\n        >\r\n          <div className=\"button-content\">\r\n            {isProcessing ? (\r\n              <>\r\n                <div\r\n                  className=\"spinner\"\r\n                  role=\"status\"\r\n                  aria-label=\"Processing payment\"\r\n                />\r\n                <span>Processing...</span>\r\n              </>\r\n            ) : (\r\n              <span>Pay £{total.toFixed(2)}</span>\r\n            )}\r\n          </div>\r\n        </button>\r\n      </form>\r\n\r\n      <div className=\"security-info\">\r\n        <p>🔒 All payments are secure and encrypted</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction PaymentPage() {\r\n  const [clientSecret, setClientSecret] = useState(\"\");\r\n  const [error, setError] = useState(null);\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n  const { cart } = useCart();\r\n\r\n  const orderDetails = location.state?.orderDetails;\r\n\r\n  useEffect(() => {\r\n    if (!orderDetails || !cart?.length) {\r\n      console.log(\"Invalid payment page access, redirecting to checkout\");\r\n      navigate(\"/checkout\");\r\n      return;\r\n    }\r\n\r\n    const createPaymentIntent = async () => {\r\n      try {\r\n        console.log(\"Creating payment intent...\");\r\n        console.log(\"API URL:\", api.defaults.baseURL);\r\n\r\n        const response = await api.post(\"/orders/create-payment-intent\", {\r\n          amount: orderDetails.totalAmount,\r\n          currency: \"gbp\",\r\n          metadata: {\r\n            customerName: orderDetails.customerInfo.name,\r\n            customerEmail: orderDetails.customerInfo.email,\r\n          },\r\n        });\r\n\r\n        console.log(\"Payment intent created:\", response.data);\r\n        setClientSecret(response.data.clientSecret);\r\n      } catch (error) {\r\n        console.error(\"Payment setup error:\", error);\r\n        console.error(\"Error details:\", {\r\n          message: error.message,\r\n          response: error.response?.data,\r\n          status: error.response?.status,\r\n          config: error.config,\r\n        });\r\n        setError(\r\n          error.response?.data?.message ||\r\n            \"Failed to setup payment. Please try again.\"\r\n        );\r\n      }\r\n    };\r\n\r\n    createPaymentIntent();\r\n  }, [cart, orderDetails, navigate]);\r\n\r\n  if (error) {\r\n    return (\r\n      <div className=\"error-container\" role=\"alert\">\r\n        <h2>Payment Setup Failed</h2>\r\n        <p>{error}</p>\r\n        <button onClick={() => navigate(\"/checkout\")} className=\"return-button\">\r\n          Return to Checkout\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (!clientSecret) {\r\n    return (\r\n      <div className=\"loading-container\" role=\"status\">\r\n        <div className=\"spinner\" />\r\n        <p>Setting up payment...</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"payment-page\">\r\n      <Elements\r\n        stripe={stripePromise}\r\n        options={{\r\n          clientSecret,\r\n          appearance: {\r\n            theme: \"stripe\",\r\n            variables: {\r\n              colorPrimary: \"#0a5c66\",\r\n              colorBackground: \"#ffffff\",\r\n              colorText: \"#30313d\",\r\n            },\r\n          },\r\n        }}\r\n      >\r\n        <CheckoutForm />\r\n      </Elements>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PaymentPage;\r\n","import React from 'react';\r\nimport './styles.css';\r\n\r\nconst ProgressSteps = ({ currentStep }) => {\r\n  return (\r\n    <div className=\"progress-steps\">\r\n      <div className=\"progress-step-wrapper\">\r\n        <div className=\"progress-step-container\">\r\n          <div className={`progress-step-circle ${currentStep >= 1 ? 'active' : ''}`}>\r\n            1\r\n          </div>\r\n          <div className={`progress-line ${currentStep >= 2 ? 'active' : ''}`} />\r\n        </div>\r\n        <span className=\"progress-step-label\">Order Details</span>\r\n      </div>\r\n\r\n      <div className=\"progress-step-wrapper\">\r\n        <div className=\"progress-step-container\">\r\n          <div className={`progress-step-circle ${currentStep >= 2 ? 'active' : ''}`}>\r\n            2\r\n          </div>\r\n          <div className={`progress-line ${currentStep >= 3 ? 'active' : ''}`} />\r\n        </div>\r\n        <span className=\"progress-step-label\">Payment</span>\r\n      </div>\r\n\r\n      <div className=\"progress-step-wrapper\">\r\n        <div className=\"progress-step-container\">\r\n          <div className={`progress-step-circle ${currentStep >= 3 ? 'active' : ''}`}>\r\n            3\r\n          </div>\r\n        </div>\r\n        <span className=\"progress-step-label\">Confirmation</span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProgressSteps;\r\n\r\n\r\n\r\n"],"names":["stripePromise","loadStripe","process","apiUrl","api","axios","create","baseURL","endsWith","withCredentials","headers","DELIVERY_FEE","CheckoutForm","_location$state","_orderDetails$custome","stripe","useStripe","elements","useElements","navigate","useNavigate","location","useLocation","cart","clearCart","useCart","isProcessing","setIsProcessing","useState","error","setError","orderDetails","state","useEffect","customerInfo","length","console","log","calculateTotals","subtotal","reduce","sum","item","selectedPrice","price","quantity","deliveryFee","total","_jsxs","className","children","_jsx","ProgressSteps","currentStep","map","name","size","toFixed","id","_id","Object","entries","_ref","key","value","charAt","toUpperCase","slice","replace","specialInstructions","onSubmit","async","event","preventDefault","submitError","submit","paymentError","paymentIntent","confirmPayment","confirmParams","return_url","window","origin","payment_method_data","billing_details","email","phone","address","line1","city","postal_code","postcode","country","redirect","status","orderId","orderData","paymentIntentId","items","totalAmount","response","post","data","_error$response","_error$response2","_error$response3","_error$response3$data","message","Error","createOrder","PaymentElement","role","type","disabled","_Fragment","_location$state2","clientSecret","setClientSecret","defaults","amount","currency","metadata","customerName","customerEmail","_error$response4","_error$response5","_error$response6","_error$response6$data","config","createPaymentIntent","onClick","Elements","options","appearance","theme","variables","colorPrimary","colorBackground","colorText"],"sourceRoot":""}